spawn(function() -- Bắt đầu một luồng riêng cho toàn bộ logic
    -- Định nghĩa vị trí xuất hiện ban đầu của Deer.
    -- Bạn có thể thay đổi giá trị này thành một vị trí cố định trong map của bạn.
    local initialSpawnPosition = Vector3.new(0, 10, -100) -- Ví dụ: (X, Y, Z)

    -- Vòng lặp chính: Chạy mỗi 30 giây để kiểm soát sự kiện "Dear God"
    while task.wait(3) do
        -- Kiểm tra các điều kiện để bắt đầu sự kiện
        -- Nếu người chơi đang ở phòng 50, 100 hoặc LatestRoom là 6, chờ cho đến khi điều kiện này không còn đúng
        if workspace.CurrentRooms:FindFirstChild("50")
        or workspace.CurrentRooms:FindFirstChild("100")
        or game:GetService("ReplicatedStorage").GameData.LatestRoom.Value == 6 then
            repeat task.wait() until not workspace.CurrentRooms:FindFirstChild("50")
                and not workspace.CurrentRooms:FindFirstChild("100")
                and not (game:GetService("ReplicatedStorage").GameData.LatestRoom.Value == 6) -- Đảm bảo logic chính xác: KHÔNG phải là phòng 6
        end

        -- Khởi tạo các biến cờ cho logic sự kiện
        local gotBadge = false    -- Cờ kiểm tra đã nhận huy hiệu chưa
        local hit = false         -- Cờ kiểm tra đã bị tấn công chưa
        local found = false       -- Cờ kiểm tra Deer/Node đã tìm thấy người chơi chưa
        local isChasing = false   -- Cờ mới: Kiểm tra xem Deer có đang đuổi theo không
        local currentFollowSound = nil -- Biến để giữ tham chiếu đến âm thanh đuổi theo

        --- HIỆU ỨNG CAMERA RUNG LẮC (KHỞI ĐỘNG NGAY) ---
        -- Yêu cầu module CameraShaker từ ReplicatedStorage
        local CameraShaker = require(game:GetService("ReplicatedStorage").CameraShaker)
        local camara = game.Workspace.CurrentCamera

        local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(cf)
            camara.CFrame = camara.CFrame * cf
        end)

        camShake:Start()
        camShake:Shake(CameraShaker.Presets.Earthquake)

        --- HÀM TẢI ÂM THANH TỪ GITHUB (SỬ DỤNG HÀM EXPLOIT) ---
        local function GetGitSound(GithubSnd, SoundName)
            local url = GithubSnd
            if not isfile(SoundName .. ".mp3") then
                writefile(SoundName .. ".mp3", game:HttpGet(url))
            end
            local sound = Instance.new("Sound")
            sound.SoundId = (getcustomasset or getsynasset)(SoundName .. ".mp3")
            return sound
        end

        --- LẤY THÔNG TIN NGƯỜI CHƠI ---
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait() -- Chờ character nếu chưa load
        local HumanoidRootPart = character:WaitForChild("HumanoidRootPart") -- Chờ HumanoidRootPart

        --- TẢI VÀ KHỞI TẠO MODEL "DEER" ---
        -- Thay thế '86055776714285' bằng Asset ID thực của model Deer của bạn.
        local deer = game:GetObjects("rbxassetid://86055776714285")[1]
        deer.Parent = workspace
        deer.PrimaryPart = deer:FindFirstChildWhichIsA("BasePart")
        if not deer.PrimaryPart then
            warn("Model 'Deer' không có PrimaryPart! Đảm bảo model có một BasePart làm PrimaryPart.")
            deer:Destroy()
            continue -- Bỏ qua vòng lặp này nếu model lỗi
        end
        deer.PrimaryPart.Anchored = true
        deer.PrimaryPart.CanCollide = false
        deer.Name = "Deer" -- Đặt tên để dễ tìm và quản lý
        local ambush = deer.PrimaryPart -- Biến tham chiếu đến PrimaryPart của Deer

        -- Đặt Deer ở vị trí xuất hiện ban đầu
        ambush.CFrame = CFrame.new(initialSpawnPosition)
        task.wait()

        --- TẢI VÀ KHỞI TẠO "NODE" ENTITY (SỬ DỤNG LOADSTRING - HÀM EXPLOIT) ---
        -- Đoạn code này tải và thực thi một script từ GitHub để tạo entity.
        -- Nó CỰC KỲ KHÔNG ỔN ĐỊNH và KHÔNG AN TOÀN trong môi trường Roblox tiêu chuẩn.
        -- Nó sẽ chỉ hoạt động nếu bạn đang chạy exploit cho phép loadstring/httpget.
        task.spawn(function()
            -- Tải và thực thi module Spawner từ GitHub
            local Spawner = loadstring(game:HttpGet('https://raw.githubusercontent.com/MuhXd/DoorSuff/main/OtherSuff/DoorEntitySpawn%2BSource'))()

            -- Tạo entity "node" với các thuộc tính bạn đã định nghĩa
            local entity = Spawner.createEntity({
                CustomName = "node", -- Tên tùy chỉnh của entity (sẽ là workspace.node)
                Model = "rbxassetid://83406552862223", -- Asset ID của model "node"
                Speed = 36, -- Tốc độ của entity (phần trăm so với Rush)
                DelayTime = 0,
                HeightOffset = 0,
                CanKill = false, -- Entity này không tự gây sát thương theo Spawner
                NoDieOnCrouching = false,
                AntiCrucifix = true,
                KillRange = 0,
                OneRoom = false,
                DieOnLook = false,
                NoHiding = false,
                BreakLights = true, -- Sẽ phá đèn khi di chuyển
                BackwardsMovement = false,
                MovementDeath = {
                    false, -- Turned On?
                    '2', -- '1'= 'Instant Without Being Looked out' | '2' = 'With Being Looked At'
                },
                FlickerLights = {
                    true, -- Enabled/Disabled
                    10, -- Time (seconds)
                },
                Cycles = {
                    Min = 1,
                    Max = 1,
                    WaitTime = 1,
                },
                CamShake = {
                    true, -- Enabled/Disabled
                    {3.5, 20, 0.1, 1}, -- Shake values
                    100, -- Shake start distance
                },
                Jumpscare = {
                    false, -- Enabled/Disabled
                    {
                        Type = "2",
                        Image1 = "rbxassetid://10483855823",
                        Image2 = "rbxassetid://10483999903",
                        Shake = true,
                        Sound1 = { "0", { Volume = 5 } }, -- Placeholder SoundId
                        Sound2 = { "0", { Volume = 3 } }, -- Placeholder SoundId
                        Flashing = { true, Color3.fromRGB(255, 255, 255) },
                        Tease = { true, Min = 1, Max = 3 },
                    },
                },
                Color = 'GuidingLight', -- Màu cho hiệu ứng đèn (xanh)
                DiffrentMessages = false,
                CustomDialog = {
                    {"Claim has seen you.", "It will consume anyone on sight.", "It takes a bit to fully spawn in", "so you can use that to your advantage."},
                    {"Stop Dieing"},
                    {"Bruh", "Use what you have learned from Rush!"},
                    {"It seems like Template is causing quite the ruckus...", "Hide in a closet or bed as quickly as possible!"},
                    {"I have told You What to do", "YOU JUST HAVE A SKILL ISSUE"}
                }
            })

            -- Debugging callbacks cho entity (được cung cấp bởi Spawner)
            entity.Debug.OnEntityMoving = function(Invincible, Hiding, plrCollisionPoint) print("Invincible: " .. tostring(Invincible) .. ", Hiding: " .. tostring(Hiding) .. ", Player to Entity Collision (None hiding Point): " .. tostring(plrCollisionPoint)) end
            entity.Debug.OnEntitySpawned = function()
                print("Entity 'node' has spawned.")
                game:GetService("RunService").RenderStepped:Connect(function()
                    -- Di chuyển model "node" để theo sát vị trí của PrimaryPart của "Deer" (ambush)
                    if ambush and workspace:FindFirstChild("node") and workspace.node:FindFirstChildOfClass("BasePart") then
                        workspace.node:FindFirstChildOfClass("BasePart").CFrame = ambush.CFrame
                    end
                end)
            end
            entity.Debug.OnEntityDespawned = function() print("Entity has despawned:") end
            entity.Debug.OnEntityStartMoving = function() print("Entity has started moving:") end
            entity.Debug.OnEntityFinishedRebound = function() print("Entity has finished rebound:") end
            entity.Debug.OnEntityEnteredRoom = function(entityTable, room) print("Entity:", "has entered room:", room) end
            entity.Debug.OnLookAtEntity = function() print("Player has looked at entity:") end
            entity.Debug.OnDeath = function() warn("Player has died.") end

            -- Chạy entity đã tạo
            Spawner.runEntity(entity)
        end)

        --- LOGIC KÍCH HOẠT ĐUỔI THEO KHI NGƯỜI CHƠI LẠI GẦN ---
        local detectionRange = 40 -- Phạm vi kích hoạt đuổi theo (40 stud)
        local isActivated = false -- Cờ kiểm tra xem sự kiện đuổi theo đã được kích hoạt chưa

        -- Vòng lặp kiểm tra khoảng cách và kích hoạt đuổi theo
        task.spawn(function()
            while task.wait(0.5) do
                -- Kiểm tra các đối tượng cần thiết
                if not ambush or not HumanoidRootPart or not character then break end

                -- Nếu Deer chưa kích hoạt đuổi theo
                if not isActivated then
                    local distance = (ambush.Position - HumanoidRootPart.Position).Magnitude
                    if distance <= detectionRange then
                        isActivated = true -- Đánh dấu đã kích hoạt
                        print("Deer đã được kích hoạt và bắt đầu đuổi theo!")

                        -- ÂM THANH THEO DÕI (Chỉ phát khi kích hoạt đuổi theo)
                        currentFollowSound = GetGitSound("https://github.com/Tinkgy111/Bang/blob/main/followed.mp3?raw=true","chase")
                        if currentFollowSound then
                            currentFollowSound.Parent = deer -- Đặt âm thanh vào model Deer
                            currentFollowSound.Volume = 1
                            currentFollowSound:Play()
                        end
                        
                        -- ĐẶT isChasing = true TRƯỚC KHI TẠO LUỒNG ĐUỔI THEO
                        isChasing = true

                        -- Kích hoạt logic đuổi theo chính
                        task.spawn(function()
                            local TweenService = game:GetService("TweenService")
                            local followTweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)

                            while isChasing do -- Bây giờ `isChasing` sẽ là true khi vòng lặp bắt đầu
                                -- Thoát vòng lặp nếu Deer bị hủy hoặc người chơi không còn tồn tại/chết
                                if not ambush or not ambush.Parent or not character or not character.HumanoidRootPart then
                                    isChasing = false -- Dừng chase nếu mục tiêu biến mất
                                    break
                                end

                                -- Xác định vị trí mục tiêu: hơi phía sau người chơi và duy trì độ cao
                                local targetCFrame = character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -2) -- Vị trí phía sau người chơi một chút
                                targetCFrame = CFrame.new(targetCFrame.X, character.HumanoidRootPart.Position.Y + 7, targetCFrame.Z) -- Giữ độ cao tương đối

                                -- Tạo và chạy tween để di chuyển Deer tới vị trí mục tiêu
                                local followTween = TweenService:Create(ambush, followTweenInfo, {CFrame = targetCFrame})
                                followTween:Play()
                                task.wait(0.1) -- Đợi một chút để tween cập nhật liên tục
                            end
                            -- Dừng âm thanh khi kết thúc đuổi theo
                            if currentFollowSound and currentFollowSound.Playing then
                                currentFollowSound:Stop()
                            end
                        end)
                    end
                end
            end
        end)

        --- LOGIC GÂY SÁT THƯƠNG KHI NHÌN VÀO DEER ---
        task.spawn(function()
            while task.wait(1.5) do
                if gotBadge == true or not isChasing then -- Dừng vòng lặp nếu đã nhận huy hiệu hoặc chưa đuổi theo
                    break
                end
                -- Kiểm tra các đối tượng cần thiết trước khi truy cập để tránh lỗi
                if not ambush or not HumanoidRootPart or not character or not character.Humanoid then
                    break -- Thoát nếu đối tượng không tồn tại (ví dụ: người chơi chết)
                end

                local origin = ambush.Position
                local direction = (HumanoidRootPart.Position - origin).Unit
                local ray = Ray.new(origin, direction * 5050) -- Raycast một khoảng cách lớn
                local cast = workspace:Raycast(ray.Origin, ray.Direction)

                -- Nếu raycast trúng vào một phần của character của người chơi
                if cast and cast.Instance:IsDescendantOf(character) then
                    local look, onScreen = game.Workspace.CurrentCamera:WorldToScreenPoint(ambush.Position)
                    -- Kiểm tra nếu Deer đang nằm trong màn hình của người chơi
                    if onScreen then
                        character.Humanoid:TakeDamage(8) -- Gây sát thương
                    end
                end
            end
        end)

        --- LOGIC PHÁT HIỆN VA CHẠM VÀ JUMPSCARE ---
        task.spawn(function()
            local TweenService = game:GetService("TweenService") -- Khai báo TweenService ở đây
            while task.wait(0.5) do
                if hit == true or not isChasing then -- Dừng vòng lặp nếu đã bị tấn công hoặc chưa đuổi theo
                    break
                end
                -- Kiểm tra các đối tượng cần thiết trước khi truy cập để tránh lỗi
                if not ambush or not HumanoidRootPart or not character or not character.Humanoid then
                    break -- Thoát nếu đối tượng không tồn tại
                end

                local hitbox = 9 -- Phạm vi va chạm
                local origin = ambush.Position
                local direction = (HumanoidRootPart.Position - origin).Unit
                local ray = Ray.new(origin, direction * hitbox)
                local result = workspace:Raycast(ray.Origin, ray.Direction)

                -- Nếu raycast trúng vào character của người chơi
                if result and result.Instance:IsDescendantOf(character) then
                    found = true -- Đã tìm thấy người chơi
                    hit = true   -- Đã va chạm
                    isChasing = false -- Dừng đuổi theo khi va chạm

                    if workspace:FindFirstChild("node") then
                        workspace.node:Destroy() -- Hủy model "node"
                    end
                    if currentFollowSound and currentFollowSound.Playing then
                        currentFollowSound:Stop() -- Dừng âm thanh đuổi theo
                    end

                    -- Bắt đầu Jumpscare GUI và hiệu ứng âm thanh
                    local playergui = player:WaitForChild("PlayerGui")
                    local screenGui = Instance.new("ScreenGui")
                    screenGui.Parent = playergui
                    screenGui.Name = "Screen Gui"
                    screenGui.IgnoreGuiInset = true

                    local stop = false -- Cờ điều khiển vòng lặp hiệu ứng GUI
                    local done = false -- Cờ báo hiệu kết thúc jumpscare

                    -- Âm thanh Jumpscare
                    local killSound = Instance.new("Sound")
                    killSound.Parent = workspace -- Đặt trong workspace để đảm bảo phát
                    killSound.PlaybackSpeed = 3
                    killSound.SoundId = "rbxassetid://5263560896" -- ID âm thanh Death Sound Chat
                    killSound.Name = "Dear god death sound chat"
                    killSound.Volume = 5
                    killSound.Looped = true

                    -- Các hiệu ứng âm thanh
                    local flange = Instance.new("FlangeSoundEffect")
                    flange.Parent = killSound; flange.Depth = 1; flange.Mix = 1; flange.Rate = 0.2
                    local trem = Instance.new("TremoloSoundEffect")
                    trem.Parent = killSound; trem.Depth = 1; trem.Duty = 0.94; trem.Frequency = 20
                    local pitch = Instance.new("PitchShiftSoundEffect")
                    pitch.Parent = killSound; pitch.Octave = 0.5
                    local distort = Instance.new("DistortionSoundEffect")
                    distort.Parent = killSound; distort.Level = 0.98

                    killSound:Play()

                    -- GUI: Background nhấp nháy
                    local Backgroun = Instance.new("ImageLabel")
                    Backgroun.Parent = screenGui
                    Backgroun.Size = UDim2.new(1, 0, 1, 0)
                    Backgroun.ImageTransparency = 1
                    Backgroun.BackgroundTransparency = 0
                    Backgroun.BackgroundColor3 = Color3.new(0, 0, 0)
                    Backgroun.Image = "rbxassetid://105983470581183"

                    task.wait()

                    -- GUI: Khuôn mặt jumpscare
                    local face = Instance.new("ImageLabel")
                    face.Parent = screenGui
                    face.AnchorPoint = Vector2.new(0.5, 0.5)
                    face.Position = UDim2.new(0.5, 0, 0.589, 0)
                    face.Size = UDim2.new(0, 860, 0, 860)
                    face.Image = "rbxassetid://73683518024275"
                    face.ImageTransparency = 0
                    face.BackgroundTransparency = 1

                    -- Logic nhấp nháy background
                    task.spawn(function()
                        while task.wait() do
                            if stop == true then break end
                            Backgroun.BackgroundTransparency = 0
                            Backgroun.ImageTransparency = 1
                            task.wait(0.1)
                            Backgroun.BackgroundTransparency = 1
                            Backgroun.ImageTransparency = 0
                        end
                    end)

                    -- Logic thay đổi ảnh background
                    task.spawn(function()
                        while task.wait() do
                            if stop == true then break end
                            Backgroun.Image = "rbxassetid://131073231978514"
                            task.wait(0.0589)
                            Backgroun.Image = "rbxassetid://105841646930424"
                        end
                    end)

                    -- Logic xoay và thay đổi ảnh khuôn mặt
                    task.spawn(function()
                        while task.wait() do
                            if stop == true then break end
                            face.Rotation = 2
                            face.Image = "rbxassetid://122859819664215"
                            task.wait(0.0589)
                            face.Rotation = -2
                            face.Image = "rbxassetid://84489429478798"
                            task.wait(0.0589)
                            face.Rotation = 2
                            face.Image = "rbxassetid://73683518024275"
                            task.wait(0.0589)
                            face.Rotation = -2
                        end
                    end)

                    task.wait()

                    -- GUI: Text nhấp nháy/di chuyển
                    local text = Instance.new("ImageLabel")
                    text.Parent = screenGui
                    text.AnchorPoint = Vector2.new(0.5, 0.5)
                    text.Position = UDim2.new(0.5, 0, 0.5, 0)
                    text.Size = UDim2.new(0, 300, 0, 300)
                    text.Image = "rbxassetid://117106082021449"
                    text.ImageTransparency = 0
                    text.BackgroundTransparency = 1

                    -- Logic thay đổi ảnh text
                    task.spawn(function()
                        while task.wait() do
                            if stop == true then break end
                            text.Image = "rbxassetid://89229444931090"
                            task.wait(0.0589)
                            text.Image = "rbxassetid://117106082021449"
                        end
                    end)

                    -- Logic di chuyển vị trí text ngẫu nhiên
                    task.spawn(function()
                        while task.wait() do
                            if stop == true then break end
                            text.Position = UDim2.new(Random.new():NextNumber(0, 0.5), 0, Random.new():NextNumber(0, 0.6), 0)
                            task.wait()
                            text.Position = UDim2.new(Random.new():NextNumber(0, 0.5), 0, Random.new():NextNumber(0, 0.6), 0)
                        end
                    end)

                    -- Logic nhấp nháy độ trong suốt của text
                    task.spawn(function()
                        while task.wait() do
                            if stop == true then break end
                            text.ImageTransparency = 0
                            task.wait()
                            text.ImageTransparency = 1
                        end
                    end)

                    task.wait(1.6) -- Chờ một chút trước khi kết thúc jumpscare
                    stop = true     -- Báo hiệu dừng các vòng lặp hiệu ứng GUI
                    killSound:Stop() -- Dừng âm thanh jumpscare
                    task.wait()

                    -- Dần làm trong suốt các phần tử GUI
                    task.spawn(function()
                        while task.wait() do
                            if done == true then break end
                            face.ImageTransparency = 1
                            text.ImageTransparency = 1
                            Backgroun.ImageTransparency = 1
                            Backgroun.BackgroundTransparency = 1
                        end
                    end)
                    task.wait(0.2) -- Đợi một chút để hiệu ứng kết thúc

                    -- Gây sát thương và hủy bỏ
                    if character and character.Humanoid then
                        character.Humanoid.Health = 0 -- Giết người chơi
                    end
                    task.wait(3) -- Chờ trước khi dọn dẹp
                    done = true -- Báo hiệu đã xong, dọn dẹp GUI
                    screenGui:Destroy() -- Hủy bỏ ScreenGui
                end
            end
        end)

        --- CẬP NHẬT THÔNG TIN PHÒNG (Không dùng cho logic di chuyển của Deer nữa) ---
        -- Các biến này vẫn được cập nhật nhưng không còn kiểm soát đường đi cố định của Deer
        local rooms = workspace.CurrentRooms
        local value = game:GetService("ReplicatedStorage").GameData.LatestRoom.Value
        local nextroom = rooms:FindFirstChild(value + 1)
        local room = rooms:FindFirstChild(value)
        local room1 = rooms:FindFirstChild(value - 1)
        local room2 = rooms:FindFirstChild(value - 2)
        local room3 = rooms:FindFirstChild(value - 3)
        local room4 = rooms:FindFirstChild(value - 4)
        local room5 = rooms:FindFirstChild(value - 5)

        game:GetService("ReplicatedStorage").GameData.LatestRoom.Changed:Connect(function()
            value = game:GetService("ReplicatedStorage").GameData.LatestRoom.Value -- Cập nhật giá trị 'value'
            nextroom = rooms:FindFirstChild(value + 1)
            room = rooms:FindFirstChild(value)
            room1 = rooms:FindFirstChild(value - 1)
            room2 = rooms:FindFirstChild(value - 2)
            room3 = rooms:FindFirstChild(value - 3)
            room4 = rooms:FindFirstChild(value - 4)
            room5 = rooms:FindFirstChild(value - 5)
        end)

        --- LOGIC KẾT THÚC VÀ HUY HIỆU ---
        -- Đoạn này chạy sau khi vòng lặp chính (Deer/Node event) kết thúc hoặc bị gián đoạn.
        -- Nó sẽ kiểm tra xem người chơi có sống sót không để cấp huy hiệu.
        task.spawn(function()
            -- Đợi cho đến khi sự kiện đuổi theo kết thúc hoặc người chơi bị hit/chết
            -- Bạn có thể cần một biến cờ khác để báo hiệu khi sự kiện đuổi theo kết thúc theo cách bình thường
            -- Ví dụ, nếu Deer/Node có một thời gian tồn tại nhất định
            task.wait(25) -- Ví dụ: chờ 25 giây cho event đuổi theo kết thúc nếu không bị hit

            -- Nếu người chơi KHÔNG bị "found" VÀ ĐÃ BỊ ĐUỔI THEO (tức là đã sống sót)
            if found == false and isActivated == true then
                gotBadge = true -- Đánh dấu đã sống sót
            end

            -- Dừng đuổi theo và hủy các model khi event kết thúc
            isChasing = false
            if deer and deer.Parent then deer:Destroy() end
            if workspace:FindFirstChild("node") and workspace.node.Parent then workspace.node:Destroy() end
            if currentFollowSound and currentFollowSound.Playing then
                currentFollowSound:Stop()
                currentFollowSound:Destroy()
            end

            if gotBadge == true then
                -- Tải và hiển thị huy hiệu (SỬ DỤNG LOADSTRING - HÀM EXPLOIT)
                local achievementGiver = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Custom%20Achievements/Source.lua"))()

                achievementGiver({
                    Title = "Last Chance Too Look Away",
                    Desc = "Why are you running?",
                    Reason = "Survive the rare Entity called Dear God",
                    Image = "rbxassetid://114825307168774" -- Asset ID của ảnh huy hiệu
                })
            end
        end)

        -- Đợi một khoảng thời gian trước khi vòng lặp chính chạy lại, để sự kiện có thời gian kết thúc hoàn toàn
        task.wait(10) -- Hoặc thời gian phù hợp hơn cho toàn bộ event
        -- Đảm bảo các model bị hủy nếu chúng chưa bị hủy bởi logic khác
        isChasing = false -- Đảm bảo dừng mọi hành động đuổi theo
        if deer and deer.Parent then deer:Destroy() end
        if workspace:FindFirstChild("node") and workspace.node.Parent then workspace.node:Destroy() end
        if currentFollowSound and currentFollowSound.Playing then
            currentFollowSound:Stop()
            currentFollowSound:Destroy()
        end
    end
end)
