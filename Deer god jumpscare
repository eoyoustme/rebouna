---====== Load Spawner ======---
local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

---====== Services ======---
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")

---====== Player and Camera References ======---
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

---====== State Variables ======---
local entityModel -- Model "Deer god" của entity
local entityPart -- Part "RushNew" bên trong entityModel, dùng cho vị trí và di chuyển
local chaseConnection = nil -- Kết nối Heartbeat để đuổi theo
local destroyTimer = nil -- Timer tự hủy Deer God
local MoveActive = true -- Biến kiểm soát việc di chuyển của Deer God
local customSpeed = 20 -- Tốc độ Deer God đuổi theo người chơi

-- Biến lưu trữ trạng thái ánh sáng ban đầu
local originalTintColor
local originalContrast

-- Biến cho Jumpscare
local isJumpscareActive = false
local cameraConn, inputConn1, inputConn2
local activeSounds = {} -- Dùng để theo dõi và dừng/hủy tất cả âm thanh jumpscare

---====== Tạo ColorCorrectionEffect nếu chưa có ======---
-- Đảm bảo có MainColorCorrection để điều khiển ánh sáng
local colorCorrection = Lighting:FindFirstChildOfClass("ColorCorrectionEffect")
if not colorCorrection then
	colorCorrection = Instance.new("ColorCorrectionEffect")
	colorCorrection.Name = "MainColorCorrection"
	colorCorrection.Parent = Lighting
end

---====== Create Entity (Deer God) ======---
local entity = spawner.Create({
	Entity = {
		Name = "Deer god",
		Asset = "rbxassetid://75877292391257", -- ID Asset của model Deer god
		HeightOffset = 0 -- Có thể điều chỉnh nếu Deer God bị kẹt vào sàn
	},
	Lights = {
		Flicker = { Enabled = true, Duration = 5 },
		Shatter = true,
		Repair = false
	},
	Earthquake = { Enabled = false },
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1}
	},
	Movement = {
		Speed = 10, -- Đã sửa: Đặt một giá trị dương nhỏ nhưng "hợp lệ" hơn**
		Delay = 0,
		Reversed = false
	},
	Rebounding = { Enabled = false },
	Damage = { Enabled = true, Range = 8, Amount = 125 },
	Crucifixion = { Enabled = true, Range = 40, Resist = false, Break = true },
	Death = {
		Type = "Guiding",
		Hints = {"ME GO PLAY SKIBIDI TOILET", "GOODBYE", "STUPID YOU DIE BY A WEAK ENTITY", "HERE IS NOT FOR NOOB"},
		Cause = ""
	}
})

---====== Helper Functions for Custom Sound (Tùy chọn: chỉ dùng nếu bạn có exploit hỗ trợ getcustomasset/writefile) ======---
-- **LƯU Ý QUAN TRỌNG:** Các hàm này chỉ hoạt động với exploit client-side.
-- Nếu bạn chạy script này như một LocalScript thông thường, bạn CẦN TẢI SOUND lên Roblox
-- và dùng rbxassetid:// của sound đó thay vì các hàm này.
function GitAud(soundgit, filename)
	-- Kiểm tra nếu getcustomasset hoặc getsynasset có sẵn
	if type(getcustomasset) == "function" or type(getsynasset) == "function" then
		writefile(filename..".mp3", game:HttpGet(soundgit))
		return (getcustomasset or getsynasset)(filename..".mp3")
	else
		warn("Cannot load sound from GitHub: getcustomasset/getsynasset not available. Please upload sound to Roblox and use its Asset ID.")
		return "" -- Trả về chuỗi rỗng để tránh lỗi SoundId
	end
end

function CustomGitSound(soundlink, vol, filename)
	local S = Instance.new("Sound")
	S.SoundId = GitAud(soundlink, filename)
	if S.SoundId == "" then return nil end -- Không tạo sound nếu ID rỗng
	S.Volume = vol
	S.Looped = false
	S:Play()
	Debris:AddItem(S, S.TimeLength + 1)
	return S
end

---====== Jumpscare Functions ======---
local function executeRealJumpscare()
	-- Ngắt kết nối UserInputService sớm để tránh xung đột
	if inputConn1 then inputConn1:Disconnect(); inputConn1 = nil end
	if inputConn2 then inputConn2:Disconnect(); inputConn2 = nil end

	local jumpscareGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
	jumpscareGui.Name = "JumpscareGUI"
	jumpscareGui.IgnoreGuiInset = true
	jumpscareGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling -- Đảm bảo hiển thị trên các UI khác

	local jumpscareImg = Instance.new("ImageLabel", jumpscareGui)
	jumpscareImg.Size = UDim2.new(1, 0, 1, 0)
	jumpscareImg.BackgroundTransparency = 1
	jumpscareImg.ImageTransparency = 1 -- Bắt đầu ẩn
	jumpscareImg.Image = "rbxassetid://11826279208" -- Jumpscare image 1 (Kiểm tra ID này có hợp lệ không)
	jumpscareImg.ZIndex = 10

	local jumpscareSound = Instance.new("Sound", workspace)
	jumpscareSound.SoundId = "rbxassetid://6567183465" -- Jumpscare sound 1 (Kiểm tra ID này có hợp lệ không)
	jumpscareSound.Volume = 3
	jumpscareSound:Play()
	activeSounds[jumpscareSound] = true -- Thêm vào bảng để quản lý sau

	TweenService:Create(jumpscareImg, TweenInfo.new(0.1), {ImageTransparency = 0}):Play()

	-- Ánh sáng trong jumpscare
	colorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
	colorCorrection.Contrast = 10
	TweenService:Create(colorCorrection, TweenInfo.new(0.25), {Contrast = 0}):Play()
	TweenService:Create(colorCorrection, TweenInfo.new(0.5), {TintColor = originalTintColor}):Play() -- Fade về màu ban đầu

	task.wait(1.5)

	jumpscareImg.ImageTransparency = 1
	jumpscareImg.Image = "rbxassetid://12331751893" -- ID ảnh skull của bạn
	jumpscareImg.ZIndex = 12
	TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()

	local skullSound = Instance.new("Sound", workspace)
	skullSound.SoundId = "rbxassetid://18459521002" -- ID âm thanh skull của bạn
	skullSound.Volume = 2
	skullSound:Play()
	activeSounds[skullSound] = true

	task.wait(2)

	TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 1}):Play().Completed:Wait()

	if cameraConn then cameraConn:Disconnect(); cameraConn = nil end
	Camera.CameraType = Enum.CameraType.Custom
	isJumpscareActive = false
	jumpscareGui:Destroy()

	-- Dừng và dọn dẹp tất cả âm thanh đang hoạt động
	for sound, _ in pairs(activeSounds) do
		if sound and sound.Playing then
			sound:Stop()
		end
		if sound and sound.Parent then
			sound:Destroy()
		end
	end
	activeSounds = {}

	-- Khôi phục trạng thái người chơi
	local char = LocalPlayer.Character
	if char then
		local hum = char:FindFirstChild("Humanoid")
		if hum then
			hum.WalkSpeed = 16
			hum.JumpPower = 50
			hum.AutoRotate = true
			hum.PlatformStand = false
			for _, part in ipairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Anchored = false
				end
			end
		end
	end
	print("Jumpscare đã kết thúc và trạng thái người chơi đã được khôi phục.")
end

local function doJumpscareWithEffect()
	if isJumpscareActive then return end
	isJumpscareActive = true

	local char = LocalPlayer.Character
	if char then
		local hum = char:FindFirstChild("Humanoid")
		if hum then
			hum.WalkSpeed = 0
			hum.JumpPower = 0
			hum.AutoRotate = false
			hum.PlatformStand = true
			for _, part in ipairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Anchored = true
				end
			end
		end
	end

	Camera.CameraType = Enum.CameraType.Scriptable
	if cameraConn then cameraConn:Disconnect() end
	cameraConn = RunService.RenderStepped:Connect(function()
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") and entityPart and entityModel and entityModel.Parent then
			Camera.CFrame = CFrame.new(LocalPlayer.Character.Head.Position, entityPart.Position)
		else
			warn("Không thể khóa camera: entityPart, đầu người chơi hoặc entityModel không tồn tại.")
			if cameraConn then cameraConn:Disconnect() end
		end
	end)
	print("Camera đã được khóa vào entity ngay khi người chơi bị đóng băng.")

	if inputConn1 then inputConn1:Disconnect(); inputConn1 = nil end
	if inputConn2 then inputConn2:Disconnect(); inputConn2 = nil end
	inputConn1 = UserInputService.InputBegan:Connect(function() return Enum.ContextActionResult.Sink end)
	inputConn2 = UserInputService.InputChanged:Connect(function() return Enum.ContextActionResult.Sink end)

	local staticGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
	staticGui.Name = "StaticGUI"
	local staticImg = Instance.new("ImageLabel", staticGui)
	staticImg.Size = UDim2.new(1, 0, 1, 0)
	staticImg.BackgroundTransparency = 1
	staticImg.ImageTransparency = 0
	staticImg.Image = "rbxassetid://1568285513"
	staticImg.ZIndex = 11

	local staticSound = Instance.new("Sound", workspace)
	staticSound.SoundId = "rbxassetid://1845110821"
	staticSound.Volume = 1
	staticSound.Looped = true
	staticSound:Play()
	activeSounds[staticSound] = true

	local currentBrightness = Lighting.Brightness
	TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = -1}):Play()

	task.wait(1.5)

	staticImg.ImageTransparency = 1
	if staticSound and staticSound.Playing then staticSound:Stop() end
	staticSound:Destroy()
	staticGui:Destroy()

	TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = currentBrightness}):Play()

	colorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
	colorCorrection.Contrast = 0

	task.wait(0.5)

	executeRealJumpscare()
end

---====== Entity Callbacks ======---

entity:SetCallback("OnSpawned", function()
	print("Entity has spawned")
	entityModel = entity.Model -- Gán mô hình "Deer god" khi nó spawn
	entityModel.Parent = workspace -- Đảm bảo Deer God nằm trong workspace nếu chưa

	-- *** ĐIỀU CHỈNH CHÍNH Ở ĐÂY: Tìm phần "RushNew" và Đặt PrimaryPart ***
	if entityModel then
		entityPart = entityModel:FindFirstChild("RushNew")
		if not entityPart then
			warn("Deer God model does NOT contain a part named 'RushNew'!")
			-- Fallback: nếu không tìm thấy "RushNew", thử dùng PrimaryPart hoặc bất kỳ BasePart nào.
			entityPart = entityModel.PrimaryPart or entityModel:FindFirstChildOfClass("BasePart")
			if not entityPart then
				warn("Could not find 'RushNew' or any suitable BasePart for Deer God! Entity may not move correctly.")
				return -- Không thể tiếp tục nếu không có phần nào để di chuyển
			end
		end
		-- Đặt PrimaryPart của model DeerGod
		entityModel.PrimaryPart = entityPart
		print("DeerGod.PrimaryPart set to: " .. entityModel.PrimaryPart.Name)

		-- Di chuyển Deer God đến vị trí ban đầu của bạn
		entityModel:SetPrimaryPartCFrame(HumanoidRootPart.CFrame * CFrame.new(0, 0, 50))
	else
		warn("entity.Model is nil after spawning! Cannot set up movement or sound.")
		return
	end

	-- --- Xóa âm mặc định của DeerGod ---
	coroutine.wrap(function()
		for i, v in ipairs(entityModel:GetDescendants()) do
			if v.Name == "RushNew" then -- Chỉ tìm trong RushNew
				pcall(function()
					if v:FindFirstChild("Breathing") then v.Breathing:Destroy() end
				end)
				pcall(function()
					if v:FindFirstChild("Footsteps") then v.Footsteps:Destroy() end
				end)
			end
		end
	end)()

	-- --- Tải âm thanh từ GitHub và phát ---
	local customSoundInstance = CustomGitSound("https://github.com/Tinkgy111/Bang/blob/main/followed.mp3?raw=true", 2, "DeerGod_Hostile")
	if customSoundInstance then
		customSoundInstance.Parent = entityModel -- Đặt Parent là entityModel đã spawn
	end

	-- Lưu trạng thái ánh sáng hiện tại (trước khi thay đổi)
	originalTintColor = colorCorrection.TintColor
	originalContrast = colorCorrection.Contrast

	-- Hiệu ứng ánh sáng khi Deer God xuất hiện: ĐỎ và mờ dần
	colorCorrection.TintColor = Color3.fromRGB(255, 255, 255) -- Bắt đầu từ trắng
	colorCorrection.Contrast = 10 -- Contrast cao
	TweenService:Create(colorCorrection, TweenInfo.new(2.5), {Contrast = 0}):Play() -- Mờ contrast về 0
	TweenService:Create(colorCorrection, TweenInfo.new(5), {TintColor = Color3.fromRGB(250, 0, 0)}):Play() -- Mờ dần về đỏ

	-- --- Di chuyển theo người chơi bằng tốc độ cố định ---
	MoveActive = true
	if chaseConnection then chaseConnection:Disconnect() end -- Ngắt kết nối cũ nếu có
	chaseConnection = RunService.Heartbeat:Connect(function(dt)
		if not MoveActive or not entityModel or not entityModel.PrimaryPart or not HumanoidRootPart or not HumanoidRootPart.Parent then return end
		local pos = entityModel.PrimaryPart.Position
		local target = HumanoidRootPart.Position
		local dir = (target - pos).Unit
		local moveVec = dir * customSpeed * dt
		local newCFrame = CFrame.new(pos + moveVec, target)
		entityModel:SetPrimaryPartCFrame(newCFrame)
	end)

	-- --- Tự huỷ sau 20–40 giây ---
	if destroyTimer then task.cancel(destroyTimer) end -- Hủy timer cũ nếu có
	destroyTimer = task.delay(math.random(20, 40), function()
		print("Deer God self-destruct timer activated.")
		MoveActive = false -- Ngừng di chuyển
		task.wait(0.5)
		if entityModel and entityModel.PrimaryPart then
			entityModel:SetPrimaryPartCFrame(entityModel.PrimaryPart.CFrame * CFrame.new(0, -100, 0)) -- Di chuyển xuống
		end
		task.wait(1)
		entity:Despawn() -- Sử dụng Despawn của Spawner để xử lý việc hủy bỏ và khôi phục ánh sáng
	end)

	-- Tạo va chạm gây sát thương
	local spawnedRushNew = entityModel:FindFirstChild("RushNew")
	if spawnedRushNew then
		spawnedRushNew.Touched:Connect(function(hit)
			local h = hit.Parent and hit.Parent:FindFirstChild("Humanoid")
			if h and hit:IsDescendantOf(Character) then
				h:TakeDamage(10)
				local stats = game:GetService("ReplicatedStorage").GameStats
				if stats:FindFirstChild("Player_"..LocalPlayer.Name) then
					stats["Player_"..LocalPlayer.Name].Total.DeathCause.Value = "Pandemonium"
				end
			end
		end)
	else
		warn("Spawned Deer God model does not contain 'RushNew' for Touched event!")
	end
end)

entity:SetCallback("OnStartMoving", function()
	print("Entity has started moving (Note: Movement is controlled by Heartbeat, not spawner's default logic).")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
	if firstTime then
		print("Entity has entered room: ".. room.Name.. " for the first time")
	else
		print("Entity has entered room: ".. room.Name.. " again")
	end
end)

entity:SetCallback("OnLookAt", function(lineOfSight)
	if lineOfSight then
		print("Player is looking at entity")
	else
		print("Player view is obstructed by something")
	end
end)

entity:SetCallback("OnRebounding", function(startOfRebound)
	if startOfRebound then
		print("Entity has started rebounding")
	else
		print("Entity has finished rebounding")
	end
end)

entity:SetCallback("OnDespawning", function()
	print("Entity is despawning")
	-- Ngắt kết nối Heartbeat và timer tự hủy để tránh rò rỉ bộ nhớ
	if chaseConnection then
		chaseConnection:Disconnect()
		chaseConnection = nil
	end
	if destroyTimer then
		task.cancel(destroyTimer)
		destroyTimer = nil
	end

	-- Khôi phục ánh sáng về trạng thái ban đầu
	TweenService:Create(colorCorrection, TweenInfo.new(2.5), {Contrast = originalContrast}):Play()
	TweenService:Create(colorCorrection, TweenInfo.new(5), {TintColor = originalTintColor}):Play()

	-- Đảm bảo gỡ neo nếu Deer God bị neo để có thể hủy
	if entityModel then
		for _, part in ipairs(entityModel:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Anchored = false
			end
		end
		print("Entity has been unanchored before despawn.")
	end
end)

entity:SetCallback("OnDespawned", function()
	print("Entity has despawned")
	local cue2 = Instance.new("Sound")
	cue2.Parent = game.Workspace
	cue2.Name = "Spawn"
	cue2.SoundId = "rbxassetid://1837829565"
	cue2.Volume = 9999
	cue2.PlaybackSpeed = 1
	cue2:Play()
	Debris:AddItem(cue2, cue2.TimeLength + 1)
	task.wait(3)
end)

entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth == 0 then
		print("Entity has killed the player - Initiating Jumpscare")
		doJumpscareWithEffect() -- Kích hoạt jumpscare khi người chơi chết
	else
		print("Entity has damaged the player")
	end
end)

-- Lắng nghe sự kiện CharacterAdded để cập nhật HumanoidRootPart khi người chơi hồi sinh
LocalPlayer.CharacterAdded:Connect(function(char)
	Character = char
	HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
end)

---====== Run Entity ======---
entity:Run()
