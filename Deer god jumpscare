---====== Load Spawner ======---
local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

---====== Services ======---
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService") -- Cần cho Jumpscare

---====== Player and Camera References ======---
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

---====== State Variables ======---
local entityModel -- Model "Deer god" của entity
local entityPart -- Part "RushNew" bên trong entityModel, dùng cho vị trí và di chuyển
local chaseConnection = nil -- Kết nối Heartbeat để đuổi theo
local destroyTimer = nil -- Timer tự hủy Deer God
local MoveActive = true -- Biến kiểm soát việc di chuyển của Deer God
local customSpeed = 20 -- Tốc độ Deer God đuổi theo người chơi (từ yêu cầu của bạn)

-- Biến lưu trữ trạng thái ánh sáng ban đầu
local originalTintColor
local originalContrast

-- Biến cho Jumpscare (Giữ nguyên từ code jumpscare của bạn)
local isJumpscareActive = false
local cameraConn, inputConn1, inputConn2
local activeSounds = {}

---====== Tạo ColorCorrectionEffect nếu chưa có ======---
-- Đảm bảo có MainColorCorrection để điều khiển ánh sáng
local colorCorrection = Lighting:FindFirstChildOfClass("ColorCorrectionEffect")
if not colorCorrection then
    colorCorrection = Instance.new("ColorCorrectionEffect")
    colorCorrection.Name = "MainColorCorrection"
    colorCorrection.Parent = Lighting
end

---====== Create Entity (Deer God) ======---
local entity = spawner.Create({
	Entity = {
		Name = "Deer god",
		Asset = "rbxassetid://75877292391257", -- ID Asset của model Deer god
		HeightOffset = 0 -- Có thể điều chỉnh nếu Deer God bị kẹt vào sàn
	},
	Lights = {
		Flicker = { Enabled = true, Duration = 5 }, -- Giữ Flicker nếu bạn muốn
		Shatter = true,
		Repair = false
	},
	Earthquake = { Enabled = false },
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1}
	},
	Movement = {
		Speed = 0, -- Đặt tốc độ mặc định của spawner là 0 để Heartbeat của chúng ta điều khiển
		Delay = 0,
		Reversed = false
	},
	Rebounding = { Enabled = false },
	Damage = { Enabled = true, Range = 40, Amount = 125 },
	Crucifixion = { Enabled = true, Range = 40, Resist = false, Break = true },
	Death = {
		Type = "Guiding",
		Hints = {"ME GO PLAY SKIBIDI TOILET", "GOODBYE", "STUPID YOU DIE BY A WEAK ENTITY", "HERE IS NOT FOR NOOB"},
		Cause = ""
	}
})

---====== Helper Functions for Custom Sound (Từ code của bạn) ======---
function GitAud(soundgit, filename)
	writefile(filename..".mp3", game:HttpGet(soundgit))
	return (getcustomasset or getsynasset)(filename..".mp3")
end

function CustomGitSound(soundlink, vol, filename)
	local S = Instance.new("Sound")
	S.SoundId = GitAud(soundlink, filename)
	S.Volume = vol
	S.Looped = false
	-- Parent S to entityModel once it's available in OnSpawned
	S:Play()
	Debris:AddItem(S, S.TimeLength + 1) -- Tự hủy âm thanh sau khi phát
    return S -- Trả về sound instance để có thể điều khiển thêm nếu cần
end

---====== Jumpscare Functions (Từ code của bạn, đã tinh chỉnh để khớp) ======---
local function executeRealJumpscare()
    -- Ngắt kết nối UserInputService sớm để tránh xung đột
    if inputConn1 then inputConn1:Disconnect(); inputConn1 = nil end
    if inputConn2 then inputConn2:Disconnect(); inputConn2 = nil end

    local jumpscareGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    jumpscareGui.Name = "JumpscareGUI"
    jumpscareGui.IgnoreGuiInset = true

    local jumpscareImg = Instance.new("ImageLabel", jumpscareGui)
    jumpscareImg.Size = UDim2.new(1, 0, 1, 0)
    jumpscareImg.BackgroundTransparency = 1
    jumpscareImg.ImageTransparency = 1
    jumpscareImg.Image = "rbxassetid://11826279208" -- Jumpscare image 1 (Nếu bạn muốn dùng ảnh khác thì thay đổi ở đây)
    jumpscareImg.ZIndex = 10

    local jumpscareSound = Instance.new("Sound", workspace)
    jumpscareSound.SoundId = "rbxassetid://6567183465" -- Jumpscare sound 1
    jumpscareSound.Volume = 3
    jumpscareSound:Play()
    table.insert(activeSounds, jumpscareSound)

    TweenService:Create(jumpscareImg, TweenInfo.new(0.1), {ImageTransparency = 0}):Play()

    -- Ánh sáng trong jumpscare (giữ nguyên logic bạn đã có)
    Lighting.MainColorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
    Lighting.MainColorCorrection.Contrast = 10
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(0.25), {Contrast = 0}):Play()
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(0.5), {TintColor = originalTintColor}):Play() -- Fade về màu ban đầu sau jumpscare

    task.wait(1.5)

    jumpscareImg.ImageTransparency = 1
    jumpscareImg.Image = "rbxassetid://12331751893" -- **Đây là ID ảnh skull từ code của bạn**
    jumpscareImg.ZIndex = 12
    TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()

    local skullSound = Instance.new("Sound", workspace)
    skullSound.SoundId = "rbxassetid://18459521002" -- **Đây là ID âm thanh skull từ code của bạn**
    skullSound.Volume = 2
    skullSound:Play()
    table.insert(activeSounds, skullSound)

    task.wait(2)

    TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 1}):Play().Completed:Wait()

    -- Dọn dẹp sau jumpscare
    if cameraConn then cameraConn:Disconnect(); cameraConn = nil end
    Camera.CameraType = Enum.CameraType.Custom
    isJumpscareActive = false
    jumpscareGui:Destroy()

    -- Dừng và dọn dẹp tất cả âm thanh đang hoạt động
    for _, sound in ipairs(activeSounds) do
        if sound and sound.Playing then
            sound:Stop()
        end
        if sound and sound.Parent then
            sound:Destroy()
        end
    end
    activeSounds = {}

    -- Khôi phục trạng thái người chơi
    local char = LocalPlayer.Character
    if char then
        local hum = char:FindFirstChild("Humanoid")
        if hum then
            hum.WalkSpeed = 16
            hum.JumpPower = 50
            hum.AutoRotate = true
            hum.PlatformStand = false
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = false
                end
            end
        end
    end
    print("Jumpscare đã kết thúc và trạng thái người chơi đã được khôi phục.")

    -- HỦY BỎ RIPPER TẠI ĐÂY (Nếu bạn muốn hủy Deer God sau jumpscare)
    -- Nếu Deer God vẫn còn sau khi chết, bạn có thể gọi entity:Despawn() ở đây
    -- entity:Despawn() -- (Tùy chọn: chỉ uncomment nếu bạn muốn Deer God biến mất ngay sau khi giết người chơi và jumpscare)
end

local function doJumpscareWithEffect()
    if isJumpscareActive then return end
    isJumpscareActive = true

    local char = LocalPlayer.Character
    if char then
        local hum = char:FindFirstChild("Humanoid")
        if hum then
            hum.WalkSpeed = 0
            hum.JumpPower = 0
            hum.AutoRotate = false
            hum.PlatformStand = true
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = true
                end
            end
        end
    end

    Camera.CameraType = Enum.CameraType.Scriptable
    if cameraConn then cameraConn:Disconnect() end
    cameraConn = RunService.RenderStepped:Connect(function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") and entityPart and entityModel and entityModel.Parent then
            Camera.CFrame = CFrame.new(LocalPlayer.Character.Head.Position, entityPart.Position)
        else
            warn("Không thể khóa camera: entityPart, đầu người chơi hoặc entityModel không tồn tại.")
            if cameraConn then cameraConn:Disconnect() end
        end
    end)
    print("Camera đã được khóa vào entity ngay khi người chơi bị đóng băng.")

    if inputConn1 then inputConn1:Disconnect(); inputConn1 = nil end
    if inputConn2 then inputConn2:Disconnect(); inputConn2 = nil end
    inputConn1 = UserInputService.InputBegan:Connect(function() return Enum.ContextActionResult.Sink end)
    inputConn2 = UserInputService.InputChanged:Connect(function() return Enum.ContextActionResult.Sink end)

    local staticGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    staticGui.Name = "StaticGUI"
    local staticImg = Instance.new("ImageLabel", staticGui)
    staticImg.Size = UDim2.new(1, 0, 1, 0)
    staticImg.BackgroundTransparency = 1
    staticImg.ImageTransparency = 0
    staticImg.Image = "rbxassetid://1568285513"
    staticImg.ZIndex = 11

    local staticSound = Instance.new("Sound", workspace)
    staticSound.SoundId = "rbxassetid://1845110821"
    staticSound.Volume = 1
    staticSound.Looped = true
    staticSound:Play()
    table.insert(activeSounds, staticSound)

    local currentBrightness = Lighting.Brightness
    TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = -1}):Play()

    task.wait(1.5)

    staticImg.ImageTransparency = 1
    if staticSound and staticSound.Playing then staticSound:Stop() end
    staticSound:Destroy()
    staticGui:Destroy()

    TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = currentBrightness}):Play()

    -- Ánh sáng khi chuẩn bị jumpscare
    Lighting.MainColorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
    Lighting.MainColorCorrection.Contrast = 0

    task.wait(0.5)

    executeRealJumpscare()
end

---====== Entity Callbacks ======---

entity:SetCallback("OnSpawned", function()
    print("Entity has spawned")
    entityModel = entity.Model -- Gán mô hình "Deer god" khi nó spawn
    entityModel.Parent = workspace -- Đảm bảo Deer God nằm trong workspace nếu chưa

    -- *** ĐIỀU CHỈNH CHÍNH Ở ĐÂY: Tìm phần "RushNew" và Đặt PrimaryPart ***
    if entityModel then
        entityPart = entityModel:FindFirstChild("RushNew")
        if not entityPart then
            warn("Deer God model does NOT contain a part named 'RushNew'!")
            -- Fallback: nếu không tìm thấy "RushNew", thử dùng PrimaryPart hoặc bất kỳ BasePart nào.
            entityPart = entityModel.PrimaryPart or entityModel:FindFirstChildOfClass("BasePart")
            if not entityPart then
                warn("Could not find 'RushNew' or any suitable BasePart for Deer God! Entity may not move correctly.")
                return -- Không thể tiếp tục nếu không có phần nào để di chuyển
            end
        end
        -- Đặt PrimaryPart của model DeerGod
        entityModel.PrimaryPart = entityPart
        print("DeerGod.PrimaryPart set to: " .. entityModel.PrimaryPart.Name)

        -- Di chuyển Deer God đến vị trí ban đầu của bạn (từ code cũ)
        entityModel:SetPrimaryPartCFrame(HumanoidRootPart.CFrame * CFrame.new(0, 0, 50))
    else
        warn("entity.Model is nil after spawning! Cannot set up movement or sound.")
        return
    end

    -- --- Xóa âm mặc định của DeerGod (từ code của bạn) ---
    coroutine.wrap(function()
        for i, v in ipairs(entityModel:GetDescendants()) do
            if v.Name == "RushNew" then -- Chỉ tìm trong RushNew
                pcall(function()
                    if v:FindFirstChild("Breathing") then v.Breathing:Destroy() end
                end)
                pcall(function()
                    if v:FindFirstChild("Footsteps") then v.Footsteps:Destroy() end
                end)
            end
        end
    end)()

    -- --- Tải âm thanh từ GitHub và phát (từ code của bạn) ---
    local customSoundInstance = CustomGitSound("https://github.com/eoyoustme/Monoxide/blob/main/Hostile.mp3?raw=true", 2, "DeerGod_Hostile")
    if customSoundInstance then
        customSoundInstance.Parent = entityModel -- Đặt Parent là entityModel đã spawn
    end

    -- Lưu trạng thái ánh sáng hiện tại (trước khi thay đổi)
    originalTintColor = colorCorrection.TintColor
    originalContrast = colorCorrection.Contrast

    -- Hiệu ứng ánh sáng khi Deer God xuất hiện: ĐỎ và mờ dần
    colorCorrection.TintColor = Color3.fromRGB(255, 255, 255) -- Bắt đầu từ trắng
    colorCorrection.Contrast = 10 -- Contrast cao
    TweenService:Create(colorCorrection, TweenInfo.new(2.5), {Contrast = 0}):Play() -- Mờ contrast về 0
    TweenService:Create(colorCorrection, TweenInfo.new(5), {TintColor = Color3.fromRGB(250, 0, 0)}):Play() -- Mờ dần về đỏ

    -- --- Di chuyển theo người chơi bằng tốc độ cố định (từ code của bạn) ---
    MoveActive = true
    if chaseConnection then chaseConnection:Disconnect() end -- Ngắt kết nối cũ nếu có
    chaseConnection = RunService.Heartbeat:Connect(function(dt)
        if not MoveActive or not entityModel or not entityModel.PrimaryPart or not HumanoidRootPart or not HumanoidRootPart.Parent then return end
        local pos = entityModel.PrimaryPart.Position
        local target = HumanoidRootPart.Position
        local dir = (target - pos).Unit
        local moveVec = dir * customSpeed * dt
        local newCFrame = CFrame.new(pos + moveVec, target)
        entityModel:SetPrimaryPartCFrame(newCFrame)
    end)

    -- --- Tự huỷ sau 20–40 giây (từ code của bạn) ---
    if destroyTimer then task.cancel(destroyTimer) end -- Hủy timer cũ nếu có
    destroyTimer = task.delay(math.random(20, 40), function()
        print("Deer God self-destruct timer activated.")
        MoveActive = false -- Ngừng di chuyển
        task.wait(0.5)
        if entityModel and entityModel.PrimaryPart then
            entityModel:SetPrimaryPartCFrame(entityModel.PrimaryPart.CFrame * CFrame.new(0, -100, 0)) -- Di chuyển xuống
        end
        task.wait(1)
        entity:Despawn() -- Sử dụng Despawn của Spawner để xử lý việc hủy bỏ và khôi phục ánh sáng
    end)

    -- Tạo va chạm gây sát thương (từ code của bạn)
    local spawnedRushNew = entityModel:FindFirstChild("RushNew")
    if spawnedRushNew then
        spawnedRushNew.Touched:Connect(function(hit)
            local h = hit.Parent and hit.Parent:FindFirstChild("Humanoid")
            if h and hit:IsDescendantOf(Character) then
                h:TakeDamage(10)
                local stats = game:GetService("ReplicatedStorage").GameStats
                if stats:FindFirstChild("Player_"..LocalPlayer.Name) then
                    stats["Player_"..LocalPlayer.Name].Total.DeathCause.Value = "Pandemonium"
                end
            end
        end)
    else
        warn("Spawned Deer God model does not contain 'RushNew' for Touched event!")
    end
end)

entity:SetCallback("OnStartMoving", function()
    print("Entity has started moving (Note: Movement is controlled by Heartbeat, not spawner's default logic).")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
    if firstTime then
        print("Entity has entered room: ".. room.Name.. " for the first time")
    else
        print("Entity has entered room: ".. room.Name.. " again")
    end
end)

entity:SetCallback("OnLookAt", function(lineOfSight)
	if lineOfSight then
		print("Player is looking at entity")
	else
		print("Player view is obstructed by something")
	end
end)

entity:SetCallback("OnRebounding", function(startOfRebound)
    if startOfRebound then
        print("Entity has started rebounding")
	else
        print("Entity has finished rebounding")
	end
end)

entity:SetCallback("OnDespawning", function()
    print("Entity is despawning")
    -- Ngắt kết nối Heartbeat và timer tự hủy để tránh rò rỉ bộ nhớ
    if chaseConnection then
        chaseConnection:Disconnect()
        chaseConnection = nil
    end
    if destroyTimer then
        task.cancel(destroyTimer)
        destroyTimer = nil
    end

    -- Khôi phục ánh sáng về trạng thái ban đầu
    -- colorCorrection đã được kiểm tra và tạo ở đầu script, không cần find lại
    TweenService:Create(colorCorrection, TweenInfo.new(2.5), {Contrast = originalContrast}):Play()
    TweenService:Create(colorCorrection, TweenInfo.new(5), {TintColor = originalTintColor}):Play()

    -- Đảm bảo gỡ neo nếu Deer God bị neo để có thể hủy
    if entityModel then
        for _, part in ipairs(entityModel:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false
            end
        end
        print("Entity has been unanchored before despawn.")
    end
end)

entity:SetCallback("OnDespawned", function()
    print("Entity has despawned")
    local cue2 = Instance.new("Sound")
    cue2.Parent = game.Workspace
    cue2.Name = "Spawn"
    cue2.SoundId = "rbxassetid://1837829565"
    cue2.Volume = 9999
    cue2.PlaybackSpeed = 1
    cue2:Play()
    Debris:AddItem(cue2, cue2.TimeLength + 1)
    task.wait(3)
end)

entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth == 0 then
		print("Entity has killed the player - Initiating Jumpscare")
        doJumpscareWithEffect() -- Kích hoạt jumpscare khi người chơi chết
	else
		print("Entity has damaged the player")
	end
end)

-- Lắng nghe sự kiện CharacterAdded để cập nhật HumanoidRootPart khi người chơi hồi sinh
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
end)

---====== Run Entity ======---
entity:Run()
