---====== Load Spawner ======---
local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

---====== Services ======---
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local Debris = game:GetService("Debris")
local UserInputService = game:GetService("UserInputService")

---====== Player and Camera References ======---
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

---====== State Variables ======---
local entityModel
local entityPart
local chaseConnection = nil
local destroyTimer = nil
local MoveActive = true
local customSpeed = 23
local activationRange = 34
local originalTintColor
local originalContrast
local isJumpscareActive = false
local cameraConn, inputConn1, inputConn2
local activeSounds = {}

---====== Create ColorCorrectionEffect if not exists ======---
local colorCorrection = Lighting:FindFirstChildOfClass("ColorCorrectionEffect")
if not colorCorrection then
	colorCorrection = Instance.new("ColorCorrectionEffect")
	colorCorrection.Name = "MainColorCorrection"
	colorCorrection.Parent = Lighting
end

---====== Create Entity (Deer God) ======---
local entity = spawner.Create({
	Entity = {
		Name = "Deer god",
		Asset = "rbxassetid://75877292391257",
		HeightOffset = 0
	},
	Lights = {
		Flicker = {Enabled = true, Duration = 5},
		Shatter = true,
		Repair = false
	},
	Earthquake = {Enabled = false},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1}
	},
	Movement = {
		Speed = 23,
		Delay = 0,
		Reversed = false
	},
	Rebounding = {Enabled = false},
	Damage = {Enabled = true, Range = 1, Amount = 125},
	Crucifixion = {Enabled = true, Range = 40, Resist = false, Break = true},
	Death = {
		Type = "Guiding",
		Hints = {"ME GO PLAY SKIBIDI TOILET", "GOODBYE", "STUPID YOU DIE BY A WEAK ENTITY", "HERE IS NOT FOR NOOB"},
		Cause = ""
	}
})

---====== Helper Functions for Custom Sound ======---
function GitAud(soundgit, filename)
	if type(getcustomasset) == "function" or type(getsynasset) == "function" then
		writefile(filename..".mp3", game:HttpGet(soundgit))
		return (getcustomasset or getsynasset)(filename..".mp3")
	else
		warn("Cannot load sound from GitHub: getcustomasset/getsynasset not available. Please upload sound to Roblox and use its Asset ID.")
		return ""
	end
end

function CustomGitSound(soundlink, vol, filename)
	local S = Instance.new("Sound")
	S.SoundId = GitAud(soundlink, filename)
	if S.SoundId == "" then return nil end
	S.Volume = vol
	S.Looped = false
	S:Play()
	Debris:AddItem(S, S.TimeLength + 1)
	return S
end

---====== Jumpscare Functions ======---
local function executeRealJumpscare()
	if inputConn1 then inputConn1:Disconnect(); inputConn1 = nil end
	if inputConn2 then inputConn2:Disconnect(); inputConn2 = nil end

	local jumpscareGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
	jumpscareGui.Name = "JumpscareGUI"
	jumpscareGui.IgnoreGuiInset = true
	jumpscareGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	local jumpscareImg = Instance.new("ImageLabel", jumpscareGui)
	jumpscareImg.Size = UDim2.new(1, 0, 1, 0)
	jumpscareImg.BackgroundTransparency = 1
	jumpscareImg.ImageTransparency = 1
	jumpscareImg.Image = "rbxassetid://11826279208"
	jumpscareImg.ZIndex = 10

	local jumpscareSound = Instance.new("Sound", workspace)
	jumpscareSound.SoundId = "rbxassetid://6567183465"
	jumpscareSound.Volume = 3
	jumpscareSound:Play()
	activeSounds[jumpscareSound] = true

	TweenService:Create(jumpscareImg, TweenInfo.new(0.1), {ImageTransparency = 0}):Play()

	colorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
	colorCorrection.Contrast = 10
	TweenService:Create(colorCorrection, TweenInfo.new(0.25), {Contrast = 0}):Play()
	TweenService:Create(colorCorrection, TweenInfo.new(0.5), {TintColor = originalTintColor}):Play()

	task.wait(1.5)

	jumpscareImg.ImageTransparency = 1
	jumpscareImg.Image = "rbxassetid://12331751893"
	jumpscareImg.ZIndex = 12
	TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()

	local skullSound = Instance.new("Sound", workspace)
	skullSound.SoundId = "rbxassetid://18459521002"
	skullSound.Volume = 2
	skullSound:Play()
	activeSounds[skullSound] = true

	task.wait(2)

	TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 1}):Play().Completed:Wait()

	if cameraConn then cameraConn:Disconnect(); cameraConn = nil end
	Camera.CameraType = Enum.CameraType.Custom
	isJumpscareActive = false
	jumpscareGui:Destroy()

	for sound, _ in pairs(activeSounds) do
		if sound and sound.Playing then
			sound:Stop()
		end
		if sound and sound.Parent then
			sound:Destroy()
		end
	end
	activeSounds = {}

	local char = LocalPlayer.Character
	if char then
		local hum = char:FindFirstChild("Humanoid")
		if hum then
			hum.WalkSpeed = 16
			hum.JumpPower = 50
			hum.AutoRotate = true
			hum.PlatformStand = false
			for _, part in ipairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Anchored = false
				end
			end
		end
	end
	print("Jumpscare đã kết thúc và trạng thái người chơi đã được khôi phục.")
end

local function doJumpscareWithEffect()
	if isJumpscareActive then return end
	isJumpscareActive = true

	local char = LocalPlayer.Character
	if char then
		local hum = char:FindFirstChild("Humanoid")
		if hum then
			hum.WalkSpeed = 0
			hum.JumpPower = 0
			hum.AutoRotate = false
			hum.PlatformStand = true
			for _, part in ipairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Anchored = true
				end
			end
		end
	end

	Camera.CameraType = Enum.CameraType.Scriptable
	if cameraConn then cameraConn:Disconnect() end
	cameraConn = RunService.RenderStepped:Connect(function()
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") and entityPart and entityModel and entityModel.Parent then
			Camera.CFrame = CFrame.new(LocalPlayer.Character.Head.Position, entityPart.Position)
		else
			warn("Không thể khóa camera: entityPart, đầu người chơi hoặc entityModel không tồn tại.")
			if cameraConn then cameraConn:Disconnect() end
		end
	end)
	print("Camera đã được khóa vào entity ngay khi người chơi bị đóng băng.")

	if inputConn1 then inputConn1:Disconnect(); inputConn1 = nil end
	if inputConn2 then inputConn2:Disconnect(); inputConn2 = nil end
	inputConn1 = UserInputService.InputBegan:Connect(function() return Enum.ContextActionResult.Sink end)
	inputConn2 = UserInputService.InputChanged:Connect(function() return Enum.ContextActionResult.Sink end)

	local staticGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
	staticGui.Name = "StaticGUI"
	local staticImg = Instance.new("ImageLabel", staticGui)
	staticImg.Size = UDim2.new(1, 0, 1, 0)
	staticImg.BackgroundTransparency = 1
	staticImg.ImageTransparency = 0
	staticImg.Image = "rbxassetid://1568285513"
	staticImg.ZIndex = 11

	local staticSound = Instance.new("Sound", workspace)
	staticSound.SoundId = "rbxassetid://1845110821"
	staticSound.Volume = 1
	staticSound.Looped = true
	staticSound:Play()
	activeSounds[staticSound] = true

	local currentBrightness = Lighting.Brightness
	TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = -1}):Play()

	task.wait(1.5)

	staticImg.ImageTransparency = 1
	if staticSound and staticSound.Playing then staticSound:Stop() end
	staticSound:Destroy()
	staticGui:Destroy()

	TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = currentBrightness}):Play()

	colorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
	colorCorrection.Contrast = 0

	task.wait(0.5)

	executeRealJumpscare()
end

---====== Entity Callbacks ======---
entity:SetCallback("OnSpawned", function()
	print("Entity has spawned")
	entityModel = entity.Model
	entityModel.Parent = workspace

	if entityModel then
		entityPart = entityModel:FindFirstChild("RushNew")
		if not entityPart then
			warn("Deer God model does NOT contain a part named 'RushNew'!")
			entityPart = entityModel.PrimaryPart or entityModel:FindFirstChildOfClass("BasePart")
			if not entityPart then
				warn("Could not find 'RushNew' or any suitable BasePart for Deer God! Entity may not move correctly.")
				return
			end
		end
				entityModel.PrimaryPart = entityPart
	end
end)

entity:SetCallback("OnDeath", function()
	print("Entity died")
	if chaseConnection then
		chaseConnection:Disconnect()
		chaseConnection = nil
	end
	if destroyTimer then
		destroyTimer:Cancel()
		destroyTimer = nil
	end
end)

entity:SetCallback("OnTick", function()
	if not MoveActive or not entityPart then return end

	local dist = (HumanoidRootPart.Position - entityPart.Position).Magnitude
	if dist <= activationRange then
		if not chaseConnection then
			chaseConnection = RunService.Heartbeat:Connect(function()
				if not entityModel or not entityModel.Parent then
					chaseConnection:Disconnect()
					chaseConnection = nil
					return
				end
				local direction = (HumanoidRootPart.Position - entityPart.Position).Unit
				local newPos = entityPart.Position + direction * customSpeed * RunService.Heartbeat:Wait()
				entityModel:SetPrimaryPartCFrame(CFrame.new(newPos, HumanoidRootPart.Position))
			end)
		end
	else
		if chaseConnection then
			chaseConnection:Disconnect()
			chaseConnection = nil
		end
	end
end)

entity:SetCallback("OnStartMoving", function()
	MoveActive = true
end)

entity:SetCallback("OnFinishedRebound", function()
	MoveActive = false
	if not isJumpscareActive then
		doJumpscareWithEffect()
	end
end)

-- Save original Lighting tint and contrast for resetting
originalTintColor = colorCorrection.TintColor
originalContrast = colorCorrection.Contrast

-- Spawn entity
entity:Spawn()

