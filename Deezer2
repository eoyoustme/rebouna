-- ===============================
-- Cấu hình Chung (General Configuration)
-- ===============================
local ENTITY_MODEL_IDS = {
    -- ID MÔ HÌNH THỰC TẾ BẠN ĐÃ CUNG CẤP
    "rbxassetid://101498124045552",
    "rbxassetid://129094269310068",
    "rbxassetid://129094269310068"
}

-- MỚI: HÀM "CustomGitSound" ĐƯỢC CHỈNH SỬA DỰA TRÊN GIẢ ĐỊNH HỖ TRỢ EXECUTOR
-- Hàm này sẽ cố gắng tải nội dung từ URL GitHub trực tiếp.
-- Cảnh báo: Cách này chỉ hoạt động trên một số Executor cụ thể có chức năng HttpGet mở rộng
-- và khả năng cho phép đối tượng Sound sử dụng dữ liệu trực tiếp, không phải rbxassetid.
local function CustomGitSound(soundlink) -- Chỉ cần soundlink, vì volume đã cố định và filename không cần thiết cho SoundId
    local sound = Instance.new("Sound")
    sound.Parent = workspace
    sound.Volume = 6 -- Bạn muốn Volume cố định là 6
    sound.PlaybackSpeed = 1
    sound.Name = "SpawnSound"

    -- Cố gắng sử dụng HttpGet để tải âm thanh.
    -- Đây là phần phụ thuộc vào Executor.
    pcall(function() -- Sử dụng pcall để bắt lỗi nếu HttpGet không tồn tại hoặc không hoạt động
        sound.SoundId = soundlink -- Một số Executor cho phép đặt URL trực tiếp
    end)

    if sound.SoundId == "" or sound.SoundId == nil then
        warn("Lỗi: Không thể gán SoundId từ đường link GitHub. Executor có thể không hỗ trợ HttpGet cho SoundId hoặc URL không hợp lệ.")
        sound:Destroy()
        return
    end
    
    -- Kiểm tra xem âm thanh có thể tải được không trước khi phát
    sound.Loaded:Wait() -- Chờ cho âm thanh được tải
    if sound.IsLoaded then
        sound:Play()
    else
        warn("Lỗi: Âm thanh không thể tải được sau khi gán SoundId từ URL GitHub. Vui lòng kiểm tra lại URL hoặc khả năng của Executor.")
        sound:Destroy()
        return
    end

    -- Xóa âm thanh sau khi kết thúc để tránh rò rỉ bộ nhớ
    task.spawn(function()
        sound.Ended:Wait()
        sound:Destroy()
    end)
end

-- Đường link GitHub bạn muốn sử dụng (sẽ được truyền vào CustomGitSound)
local GITHUB_SOUND_LINK = "https://github.com/Darker-TheDarkestGuy/DOORS/raw/refs/heads/main/XRecorder_Edited_20250622_01.mp3?raw=true"


local INITIAL_WALKSPEED = 16 -- Tốc độ đi bộ ban đầu của người chơi
local SLOWED_WALKSPEED = 12 -- Tốc độ đi bộ khi bị làm chậm
local TIME_TO_SLOWDOWN = 3.4 -- Thời gian không nhìn để bị làm chậm và đổi mô hình (giây)
local TIME_TO_DESPAWN_WHEN_LOOKING = 4 -- Thời gian nhìn liên tục để thực thể biến mất (giây)
-- Không còn SPAWN_RADIUS nữa vì vị trí là cố định sau lưng
local SPAWN_DISTANCE_BEHIND_PLAYER = 15 -- MỚI: Khoảng cách từ người chơi (phía sau) để xuất hiện
local SPAWN_IMMUNITY_DURATION = 5 -- Thời gian miễn nhiễm sau khi spawn (giây)

-- ===============================
-- Các Biến Toàn Cục (Global Variables)
-- ===============================
local Kill = false -- Điều khiển vòng lặp kiểm tra thực thể
local depthsTer = nil -- Đối tượng thực thể Obsession hiện tại
local playerHumanoid = nil -- Humanoid của người chơi
local isPlayerSlowed = false -- Trạng thái người chơi có đang bị làm chậm không
local timeNotLooking = 0 -- Thời gian người chơi không nhìn vào thực thể
local timeLooking = 0 -- Thời gian người chơi nhìn vào thực thể
local currentEntityModelID = nil -- ID mô hình hiện tại của thực thể Obsession
local isSpawningImmune = false -- Biến để kiểm soát thời gian miễn nhiễm sau khi spawn

-- ===============================
-- Hàm Hỗ Trợ (Helper Functions)
-- ===============================

-- Hàm để lấy một ID mô hình ngẫu nhiên từ danh sách ENTITY_MODEL_IDS
local function getRandomModelID()
    local randomIndex = math.random(1, #ENTITY_MODEL_IDS)
    return ENTITY_MODEL_IDS[randomIndex]
end

-- Hàm phát âm thanh spawn (đã được đổi tên từ CustomGitSound cho rõ ràng hơn về mục đích)
-- Hàm này sẽ gọi CustomGitSound với đường link GitHub
local function playSpawnSoundFromGitHub()
    print("Cố gắng phát âm thanh từ GitHub URL: " .. GITHUB_SOUND_LINK)
    CustomGitSound(GITHUB_SOUND_LINK)
end

-- Hàm trợ giúp để kích hoạt sự kiện client (như DeathHint)
local function fireLocalSignal(event, ...)
    if event and typeof(event) == "RBXScriptSignal" then
        event:Fire(...)
    elseif event and event.Fire then
        warn("Event may be a custom wrapper or does not directly support :Fire():", event)
    else
        warn("Attempted to fire an invalid event:", event)
    end
end

-- ===============================
-- Logic Thực Thể Obsession
-- ===============================

-- Hàm để tạo thực thể Obsession
local function spawnEntity()
    print("Gọi hàm spawnEntity()...")
    -- Dọn dẹp thực thể cũ nếu có
    if depthsTer then
        despawnEntity() -- Dùng hàm despawn để đảm bảo dọn dẹp đầy đủ
    end

    local character = game.Players.LocalPlayer.Character
    if not character or not character:FindFirstChildOfClass("HumanoidRootPart") then
        warn("Không tìm thấy Character hoặc HumanoidRootPart của người chơi. Không thể spawn.")
        return
    end
    playerHumanoid = character:FindFirstChildOfClass("Humanoid")
    if not playerHumanoid then
        warn("Không tìm thấy Humanoid của người chơi. Không thể spawn.")
        return
    end

    -- Chọn ID mô hình mới, đảm bảo nó không giống với ID hiện tại (nếu có nhiều hơn 1 ID)
    local newModelID = getRandomModelID()
    if currentEntityModelID and #ENTITY_MODEL_IDS > 1 then
        while newModelID == currentEntityModelID do
            newModelID = getRandomModelID()
        end
    end
    currentEntityModelID = newModelID

    -- Tải mô hình từ ID
    depthsTer = game:GetObjects(currentEntityModelID)[1]
    depthsTer.Parent = game.Workspace

    -- Tìm phần chính của mô hình để định vị
    local primaryPart = depthsTer:FindFirstChildWhichIsA("BasePart") or depthsTer:FindFirstChildWhichIsA("Part")
    if not primaryPart then
        warn("Không tìm thấy phần chính trong mô hình thực thể đã tải. Xóa thực thể.")
        despawnEntity() -- Dọn dẹp nếu không tìm thấy PrimaryPart
        return
    end

    -- THAY ĐỔI: Vị trí sau lưng người chơi
    -- Lấy CFrame của HumanoidRootPart của người chơi
    local playerCFrame = character.HumanoidRootPart.CFrame
    -- Tính toán vị trí phía sau người chơi
    -- 'playerCFrame.LookVector' là vector hướng của người chơi (hướng họ đang nhìn)
    -- Nhân với -1 để có vector ngược lại (phía sau)
    -- Nhân với SPAWN_DISTANCE_BEHIND_PLAYER để có khoảng cách mong muốn
    -- Cộng thêm Vector3.new(0, 5, 0) để đặt nó cao hơn mặt đất một chút
    primaryPart.CFrame = playerCFrame + (playerCFrame.LookVector * -SPAWN_DISTANCE_BEHIND_PLAYER) + Vector3.new(0, 5, 0)

    -- Đảm bảo các phần của mô hình không chặn người chơi
    for _, part in pairs(depthsTer:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = false
            part.CanCollide = false
        end
    end

    Kill = true -- Kích hoạt vòng lặp kiểm tra
    timeNotLooking = 0 -- Reset thời gian không nhìn
    timeLooking = 0 -- Reset thời gian nhìn
    isPlayerSlowed = false -- Reset trạng thái làm chậm
    playerHumanoid.WalkSpeed = INITIAL_WALKSPEED -- Khôi phục tốc độ ban đầu

    -- Kích hoạt miễn nhiễm khi spawn
    isSpawningImmune = true
    print("Obsession vừa spawn. Bắt đầu thời gian miễn nhiễm (" .. SPAWN_IMMUNITY_DURATION .. "s)...")
    task.delay(SPAWN_IMMUNITY_DURATION, function()
        isSpawningImmune = false -- Sau thời gian miễn nhiễm, tắt trạng thái
        print("Thời gian miễn nhiễm kết thúc. Logic Obsession hoạt động bình thường.")
    end)

    print("Thực thể Obsession được tạo với ID mô hình:", currentEntityModelID)
    playSpawnSoundFromGitHub() -- Gọi hàm phát âm thanh từ GitHub
end

-- Hàm để loại bỏ thực thể Obsession
local function despawnEntity()
    print("Gọi hàm despawnEntity()...")
    if depthsTer then
        depthsTer:Destroy()
        depthsTer = nil
    end
    Kill = false
    timeNotLooking = 0
    timeLooking = 0
    isSpawningImmune = false -- Đảm bảo tắt miễn nhiễm khi biến mất
    if isPlayerSlowed and playerHumanoid then -- Chỉ khôi phục nếu thực sự bị làm chậm
        playerHumanoid.WalkSpeed = INITIAL_WALKSPEED
        isPlayerSlowed = false
    end
    currentEntityModelID = nil -- Reset ID mô hình hiện tại
    print("Thực thể Obsession đã biến mất.")
end

-- ===============================
-- Vòng Lặp Chính & Xử Lý Sự Kiện (Main Loop & Event Handling)
-- ===============================

task.spawn(function()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        playerHumanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if playerHumanoid then
            playerHumanoid.WalkSpeed = INITIAL_WALKSPEED -- Đảm bảo tốc độ ban đầu khi script bắt đầu
        end
    end

    while true do
        task.wait(0.1) -- Kiểm tra mỗi 0.1 giây để phản hồi tốt

        -- CHỈ XỬ LÝ LOGIC CHÍNH NẾU KHÔNG TRONG THỜI GIAN MIỄN NHIỄM
        if isSpawningImmune then
            -- Nếu đang trong thời gian miễn nhiễm, chúng ta không làm gì cả với logic nhìn/không nhìn
            -- Nhưng vẫn kiểm tra người chơi còn sống để có thể dọn dẹp nếu người chơi chết.
            if playerHumanoid and playerHumanoid.Health <= 0 then
                print("Người chơi chết trong thời gian miễn nhiễm. Đang dọn dọn.")
                despawnEntity()
                break -- Thoát vòng lặp chính khi người chơi chết
            end
            continue -- Bỏ qua phần còn lại của vòng lặp và đi đến lần lặp tiếp theo
        end

        -- Đảm bảo các biến cần thiết tồn tại và người chơi còn sống
        if Kill and depthsTer and playerHumanoid and playerHumanoid.Health > 0 then
            -- Kiểm tra xem người chơi có đang nhìn vào thực thể không
            local _, cameraVisible = game.Workspace.CurrentCamera:WorldToViewportPoint(depthsTer.PrimaryPart.Position)

            if not cameraVisible then
                -- Người chơi KHÔNG nhìn vào thực thể
                timeNotLooking = timeNotLooking + 0.1 -- Tăng thời gian không nhìn
                timeLooking = 0 -- Reset thời gian nhìn khi không nhìn

                if timeNotLooking >= TIME_TO_SLOWDOWN then
                    -- Làm chậm người chơi nếu chưa bị làm chậm
                    if not isPlayerSlowed then
                        playerHumanoid.WalkSpeed = SLOWED_WALKSPEED
                        isPlayerSlowed = true
                        print("Người chơi bị làm chậm!")
                    end

                    print("Không nhìn đủ lâu (" .. string.format("%.1f", timeNotLooking) .. "s), thực thể biến mất!")
                    despawnEntity()
                    task.wait(2) -- Đợi một chút trước khi tạo mô hình mới
                    spawnEntity()
                end
            else
                -- Người chơi ĐANG nhìn vào thực thể
                timeLooking = timeLooking + 0.1 -- Tăng thời gian nhìn
                timeNotLooking = 0 -- Reset thời gian không nhìn

                -- Nếu nhìn đủ 4 giây, thực thể biến mất
                if timeLooking >= TIME_TO_DESPAWN_WHEN_LOOKING then
                    if isPlayerSlowed then
                        playerHumanoid.WalkSpeed = INITIAL_WALKSPEED
                        isPlayerSlowed = false
                        print("Tốc độ người chơi được khôi phục!")
                    end
                    print("Người chơi nhìn đủ lâu (" .. string.format("%.1f", timeLooking) .. "s), thực thể biến mất!")
                    despawnEntity()
                    task.wait(2) -- Thêm độ trễ ngắn trước khi tạo lại
                    spawnEntity() -- Tạo lại ngay lập tức
                end
            end

            -- Kiểm tra nếu người chơi chết
            if playerHumanoid.Health <= 0 then
                fireLocalSignal(game.ReplicatedStorage.RemotesFolder.DeathHint.OnClientEvent, {"Bạn đã bị Obsession nuốt chửng...", "Hãy nhìn vào nó để nó biến mất, nếu không bạn sẽ chậm lại và bị áp đảo!", "Nó thay đổi hình dạng liên tục."}, "Red")
                task.wait(0.01)
                if game:GetService("ReplicatedStorage").GameStats["Player_" .. player.Name] then
                    game:GetService("ReplicatedStorage").GameStats["Player_" .. player.Name].Total.DeathCause.Value = "Obsession"
                end
                despawnEntity()
                break -- Thoát vòng lặp chính khi người chơi chết
            end
        elseif playerHumanoid and playerHumanoid.Health <= 0 then
            despawnEntity() -- Dọn dẹp nếu người chơi chết vì nguyên nhân khác
            break -- Thoát vòng lặp chính
        end
    end
end)

-- ===============================
-- Khởi Tạo Ban Đầu (Initial Setup)
-- ===============================

-- Kiểm tra phòng hiện tại để quyết định có nên tạo thực thể không
local entityModelAllowed = true
local latestRoom = game.ReplicatedStorage.GameData.LatestRoom.Value

-- Không tạo thực thể nếu ở trong Seek, Figure, hoặc Phòng 90-100
if game.Workspace:FindFirstChild("SeekMovingNewClone") or
    latestRoom == 50 or latestRoom == 100 or
    (latestRoom >= 90 and latestRoom <= 100) then
    entityModelAllowed = false
end

-- Bắt đầu nếu được phép
if entityModelAllowed then
    task.wait(1) -- Đợi một chút để người chơi tải vào game
    spawnEntity()
end

-- Lắng nghe sự kiện thay đổi phòng để loại bỏ thực thể
game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
    despawnEntity()
    -- Bạn có thể thêm logic ở đây để quyết định xem có nên tạo lại thực thể trong phòng mới không
    -- dựa trên số phòng
end)

-- ===============================
-- Thành Tích (Achievements)
-- ===============================
local achievementGiver = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Custom%20Achievements/Source.lua"))()

achievementGiver({
    Title = "Nhìn tôi đi, quangcat!",
    Desc = "Cơ hội cuối cùng để không nhìn tôi",
    Reason = "Gặp Obsession",
    Image = "rbxassetid://97059893535136"
})
