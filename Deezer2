-- ===============================
-- Cấu hình Chung
-- ===============================
local ENTITY_MODEL_IDS = {
    "rbxassetid://12174018892" -- Thay ID model phù hợp
}

local SOUND_ASSET_ID = "rbxassetid://6351509719" -- ID âm thanh spawn

local INITIAL_WALKSPEED = 16
local SPAWN_DISTANCE_BEHIND_PLAYER = 5

local TIME_TO_DEATH_IF_NOT_LOOKING = 3 -- 3 giây không nhìn → chết
local TIME_TO_DESPAWN_WHEN_LOOKING = 3 -- 3 giây nhìn → biến mất

-- ===============================
-- Biến toàn cục
-- ===============================
local depthsTer = nil
local playerHumanoid = nil
local currentEntityModelID = nil

local timeNotLooking = 0
local timeLooking = 0
local Kill = false

-- ===============================
-- Hàm phát âm thanh spawn
-- ===============================
local function PlaySpawnSound()
    local sound = Instance.new("Sound")
    sound.Name = "SpawnSound"
    sound.Volume = 6
    sound.SoundId = SOUND_ASSET_ID
    sound.Parent = workspace
    sound:Play()
    sound.Ended:Connect(function() sound:Destroy() end)
end

-- ===============================
-- Hàm spawn thực thể
-- ===============================
local function spawnEntity()
    print("[SpawnEntity] Called")
    local player = game.Players.LocalPlayer
    if not player or not player.Character then
        print("[SpawnEntity] Không tìm thấy player hoặc character!")
        return
    end

    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
    playerHumanoid = player.Character:FindFirstChildOfClass("Humanoid")
    if not hrp or not playerHumanoid then
        print("[SpawnEntity] Không tìm thấy HumanoidRootPart hoặc Humanoid!")
        return
    end

    local modelID = ENTITY_MODEL_IDS[math.random(1, #ENTITY_MODEL_IDS)]
    currentEntityModelID = modelID

    local success, model = pcall(function()
        return game:GetObjects(modelID)[1]
    end)
    if not success or not model then
        warn("[SpawnEntity] Lỗi tải model hoặc model không tồn tại")
        return
    end

    depthsTer = model
    depthsTer.Parent = workspace

    -- Đặt PrimaryPart nếu chưa có
    if not depthsTer.PrimaryPart then
        -- Tìm BasePart đầu tiên làm PrimaryPart
        local primaryPart = depthsTer:FindFirstChildWhichIsA("BasePart")
        if primaryPart then
            depthsTer.PrimaryPart = primaryPart
        else
            warn("[SpawnEntity] Không tìm thấy BasePart để đặt làm PrimaryPart!")
            depthsTer:Destroy()
            depthsTer = nil
            return
        end
    end

    -- Spawn vị trí phía sau player và sát mặt đất (giả sử Y=5)
    local spawnPos = hrp.CFrame - (hrp.CFrame.LookVector * SPAWN_DISTANCE_BEHIND_PLAYER)
    spawnPos = CFrame.new(spawnPos.X, hrp.Position.Y, spawnPos.Z) -- giữ Y ngang bằng người chơi

    depthsTer:SetPrimaryPartCFrame(spawnPos)

    -- Set lại các part trong model
    for _, part in pairs(depthsTer:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = false
            part.CanCollide = false
        end
    end

    Kill = true
    timeNotLooking = 0
    timeLooking = 0

    PlaySpawnSound()
    print("[SpawnEntity] Thực thể đã spawn phía sau người chơi.")
end

-- ===============================
-- Hàm despawn thực thể
-- ===============================
local function despawnEntity()
    print("[DespawnEntity] Called")
    if depthsTer then
        depthsTer:Destroy()
        depthsTer = nil
    end
    Kill = false
    timeNotLooking = 0
    timeLooking = 0
    currentEntityModelID = nil
end

-- ===============================
-- Vòng lặp kiểm tra nhìn/thời gian chết và despawn
-- ===============================
task.spawn(function()
    local player = game.Players.LocalPlayer
    if not player or not player.Character then
        print("[MainLoop] Không tìm thấy player hoặc character!")
        return
    end

    playerHumanoid = player.Character:FindFirstChildOfClass("Humanoid")
    if playerHumanoid then
        playerHumanoid.WalkSpeed = INITIAL_WALKSPEED
    end

    while true do
        task.wait(0.1)

        if Kill and depthsTer and playerHumanoid and playerHumanoid.Health > 0 then
            -- Kiểm tra xem thực thể có trong camera không
            local camera = workspace.CurrentCamera
            local depthPos = depthsTer.PrimaryPart.Position
            local screenPoint, onScreen = camera:WorldToViewportPoint(depthPos)

            -- onScreen = nằm trong view và depthPos.Z > 0 (phía trước camera)
            if onScreen and screenPoint.Z > 0 then
                -- Đang nhìn thực thể
                timeLooking = timeLooking + 0.1
                timeNotLooking = 0

                if timeLooking >= TIME_TO_DESPAWN_WHEN_LOOKING then
                    print("[Logic] Nhìn đủ 3 giây → Thực thể biến mất.")
                    despawnEntity()
                    task.wait(2)
                    spawnEntity()
                end
            else
                -- Không nhìn thực thể
                timeNotLooking = timeNotLooking + 0.1
                timeLooking = 0

                if timeNotLooking >= TIME_TO_DEATH_IF_NOT_LOOKING then
                    print("[Logic] Không nhìn đủ 3 giây → Người chơi chết!")
                    playerHumanoid.Health = 0
                    despawnEntity()
                    break
                end
            end
        elseif playerHumanoid and playerHumanoid.Health <= 0 then
            despawnEntity()
            break
        end
    end
end)

-- ===============================
-- Khởi tạo thực thể ban đầu
-- ===============================
task.wait(1)
spawnEntity()
