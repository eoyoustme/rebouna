local modelName = "Sussyroom"
local assetID = "rbxassetid://11626479968"

local currentRoom = workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]

local function hasSussyroom(wing)
    for _, child in pairs(wing:GetChildren()) do
        if child.Name == modelName then
            return true
        end
    end
    return false
end

local candidateWings = {}

for _, wing in pairs(currentRoom:GetChildren()) do
    if wing:IsA("Model") then
        local doorCount = 0
        for _, part in pairs(wing:GetDescendants()) do
            if part:IsA("BasePart") and string.find(part.Name, "Door") then
                doorCount = doorCount + 1
            end
        end

        if doorCount >= 2 and not hasSussyroom(wing) then
            table.insert(candidateWings, wing)
        end
    end
end

for _, wing in pairs(candidateWings) do
    local oldModel = wing:FindFirstChild(modelName)
    if oldModel then
        oldModel:Destroy()
    end

    local newModel = Instance.new("Model")
    newModel.Name = modelName
    newModel.Parent = wing

    local obj = game:GetObjects(assetID)[1]

    -- Đặt PrimaryPart nếu chưa có
    if not obj.PrimaryPart then
        -- Tự tìm BasePart đầu tiên làm PrimaryPart
        for _, part in pairs(obj:GetDescendants()) do
            if part:IsA("BasePart") then
                obj.PrimaryPart = part
                break
            end
        end
    end

    -- Lấy bounding box của wing để lấy vị trí sàn
    local wingCFrame, wingSize = wing:GetBoundingBox()
    local wingFloorY = wingCFrame.Position.Y - wingSize.Y/2

    -- Lấy kích thước và pivot của obj
    local objCFrame, objSize = obj:GetBoundingBox()

    -- Tính vị trí để đặt obj sao cho đáy của obj trùng y sàn wing
    local targetPosition = Vector3.new(
        wingCFrame.Position.X,
        wingFloorY + objSize.Y / 2,
        wingCFrame.Position.Z
    )

    -- Đặt pivot obj sao cho PrimaryPart ở targetPosition
    local desiredCFrame = CFrame.new(targetPosition) * (obj.PrimaryPart.CFrame - obj.PrimaryPart.Position):Inverse()

    obj:PivotTo(desiredCFrame)
    obj.Parent = newModel

    -- Neo toàn bộ parts trong obj
    for _, part in pairs(obj:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = true
        end
    end

    -- Giữ lại tường, sàn, hitbox; xóa phần dư thừa
    for _, child in pairs(wing:GetChildren()) do
        if child ~= newModel and not (
            string.find(child.Name, "Wall") or
            string.find(child.Name, "Floor") or
            string.find(child.Name, "Hitbox") or
            string.find(child.Name, "Bound") or
            string.find(child.Name, "Trigger")
        ) then
            child:Destroy()
        end
    end

    print("Spawn Sussyroom chính xác tại cánh phòng: " .. wing.Name)
end
