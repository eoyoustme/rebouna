spawn(function()
while task.wait() do
        local p = game.ReplicatedStorage.GameData.LatestRoom.Value
        if p >= 53 then
light()
end
end
end)

local function A90()
task.spawn(function()
while task.wait(12) do
   

local deb = false
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RandomImageGui"
screenGui.Parent = playerGui

local function createImageLabel(parent, imageId, size, position, color, back)
    local imageLabel = Instance.new("ImageLabel")
    imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
    imageLabel.Size = size
    imageLabel.Position = position
    imageLabel.BackgroundTransparency = 1
    imageLabel.Image = "rbxassetid://" .. imageId
    imageLabel.ImageTransparency = 1 -- Initially invisible
    imageLabel.BackgroundColor3 = back or Color3.new(1, 0, 0)
    imageLabel.ImageColor3 = color or Color3.new(1, 1, 1)
    imageLabel.Parent = parent
    return imageLabel
end

local function applyGlitchEffect(imageLabel, duration)
    local startTime = tick()
    while tick() - startTime < duration do
        -- Randomize position and rotation slightly

        imageLabel.Rotation = math.random(-4, 4) -- Slight rotation
        task.wait(0.01) -- Small delay to make the effect smooth
    end
    -- Reset to original state

    imageLabel.Rotation = 0
end




local function applyscareEffect(imageLabel, duration)
    local startTime = tick()
    while tick() - startTime < duration do
        -- Randomize position and rotation slightly
        imageLabel.Position = UDim2.new(0.5 + math.random(-5, 5) / 100, 0, 0.5 + math.random(-5, 5) / 100, 0)
        imageLabel.Rotation = math.random(-5, 5) -- Slight rotation
        task.wait(0.01) -- Small delay to make the effect smooth
    end
    -- Reset to original state
    imageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
    imageLabel.Rotation = 0
end

local angy = createImageLabel(screenGui, "128097037283645", UDim2.new(0, 400, 0, 400), UDim2.new(0.5, 0, 0.5, 0))
angy.ImageTransparency = 1
angy.ImageColor3 = Color3.new(1, 0, 0)
task.spawn(function()
    applyscareEffect(angy, 2.8) -- Apply glitch to him for 2 seconds
end)

spawn(function()
local Fce = game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Jumpscare.Jumpscare_A90.Face

deb = false

game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Jumpscare.Jumpscare_A90.Face.Image = "rbxassetid://104997991514855"


task.spawn(function()
    applyGlitchEffect(Fce, 100) -- Apply glitch to newA90 for 2 seconds
end)
require(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.A90)(require(game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game))
end)
spawn(function()
wait(2)
deb = true
end)
spawn(function()
while task.wait() do
if game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Jumpscare.Jumpscare_A90.FaceAngry.Visible == true then
  if deb == true then
     break
  end
deb = true
game:GetService("Players").LocalPlayer.PlayerGui.MainUI.Jumpscare.Jumpscare_A90.FaceAngry.Visible = false
angy.ImageTransparency = 0


local ReSt = game:GetService("ReplicatedStorage") 
 ReSt.GameStats["Player_".. game.Players.LocalPlayer.Name].Total.DeathCause.Value = "A-90"
wait(1)
angy.Size = UDim2.new(0, 500, 0, 500)
game.Players.LocalPlayer.Character.Humanoid:TakeDamage(70)
local TweenService = game:GetService("TweenService")

local time = TweenInfo.new(5)

local bye = TweenService:Create(angy, time, {ImageTransparency = 1})

bye:Play()
end
end
end)

end
end)
end

spawn(function()
while task.wait() do
local debounce = false
if debounce == true then
   break
end
local e = game.ReplicatedStorage.GameData.LatestRoom.Value
  if e == 53 then
A90()
debounce = true
end
end
end)
  



debunk = false
spawn(function()
while task.wait() do
   if debunk == true then
      break
   end
         local c = game.ReplicatedStorage.GameData.LatestRoom.Value
        if c == 53 then

debunk = true
local function GetGitSound(GithubSnd, SoundName)
                local url = GithubSnd
                if not isfile(SoundName .. ".mp3") then
                    writefile(SoundName .. ".mp3", game:HttpGet(url))
                end
                local sound = Instance.new("Sound")
                sound.SoundId = (getcustomasset or getsynasset)(SoundName .. ".mp3")
                return sound
            end
local Jumpscare = GetGitSound("https://github.com/Tinkgy111/The-Gloomy-Darkness-Audio-/blob/main/Screen_Recording_20230524-164509_YouTube.mp3?raw=true","r")
    Jumpscare.Parent = workspace
    Jumpscare.Volume = 5
	Jumpscare:Play()
local function displayMessage(message)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = screenGui
    textLabel.Size = UDim2.new(0.6, 0, 0.4, 0) -- 60% width, 10% height of the screen
    textLabel.Position = UDim2.new(0.5, 0, 0.1, 0) -- Bottom-center of the screen
    textLabel.AnchorPoint = Vector2.new(0.5, 0.5) -- Center the TextLabel at its position
    textLabel.BackgroundColor3 = Color3.new(0, 0, 0) -- Black background
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 1) -- White text
    textLabel.TextScaled = true -- Automatically scale the text
    textLabel.Font = Enum.Font.Cartoon -- Set the font
    textLabel.Text = message -- Display the message
        task.wait(5)
    for i = 1, 10 do
        textLabel.TextTransparency = i / 10

        task.wait(0.1)
    end
end



-- Run the messages in separate coroutines
coroutine.wrap(function() displayMessage("Scary") end)()
end
end
end)
