--====== Load Spawner ======--
local TweenService = game:GetService("TweenService")
local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

--====== Create Entity ======--
local entity = spawner.Create({
	Entity = {
		Name = "Silence",
		Asset = "rbxassetid://135151088745605",
		HeightOffset = 0
	},
	Lights = {
		Flicker = {
			Enabled = false,
			Duration = 1
		},
		Shatter = true,
		Repair = false
	},
	Earthquake = {
		Enabled = false
	},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1} -- Magnitude, Roughness, FadeIn, FadeOut
	},
	Movement = {
		Speed = 56,
		Delay = 0,
		Reversed = false
	},
	Rebounding = {
		Enabled = false,
		Type = "Ambush",
		Min = 1,
		Max = 1,
		Delay = 2
	},
	Damage = {
		Enabled = true,
		Range = 40,
		Amount = 12
	},
	Crucifixion = {
		Enabled = true,
		Range = 40,
		Resist = false,
		Break = true
	},
	Death = {
		Type = "Guiding",
		Hints = {
			"ME GO PLAY SKIBIDI TOILET",
			"GOODBYE",
			"STUPID YOU DIE BY A WEAK ENTITY",
			"HERE IS NOT FOR NOOB"
		},
		Cause = ""
	}
})

--====== Callbacks ======--
entity:SetCallback("OnSpawned", function()
	print("Entity has spawned")
end)

entity:SetCallback("OnStartMoving", function()
	print("Entity has started moving")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
	local msg = firstTime and " for the first time" or " again"
	print("Entity has entered room: " .. room.Name .. msg)
end)

entity:SetCallback("OnLookAt", function(lineOfSight)
	if lineOfSight then
		print("Player is looking at entity")
	else
		print("Player view is obstructed by something")
	end
end)

entity:SetCallback("OnRebounding", function(startOfRebound)
	if startOfRebound then
		print("Entity has started rebounding")
	else
		print("Entity has finished rebounding")
	end
end)

entity:SetCallback("OnDespawning", function()
	print("Entity is despawning")
end)

entity:SetCallback("OnDespawned", function()
	print("Entity has despawned")
end)

--====== OnDamagePlayer: Follow player + Sound on death ======--
entity:SetCallback("OnDamagePlayer", function(newHealth)
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local entityModel = workspace:FindFirstChild("Silence")
	local entityPrimaryPart = entityModel and (entityModel.PrimaryPart or entityModel:FindFirstChildWhichIsA("BasePart"))

	if newHealth == 0 then
		print("Entity has killed the player")
		
		local cue2 = Instance.new("Sound")
		cue2.Name = "Spawn"
		cue2.SoundId = "rbxassetid://7861818231"
		cue2.Volume = 10
		cue2.PlaybackSpeed = 0.9
		cue2.Parent = workspace
		cue2:Play()
		cue2.Ended:Connect(function() cue2:Destroy() end)
	else
		print("Entity has damaged the player")

		if entityPrimaryPart then
			local follow = true
			task.spawn(function()
				for i = 1, 10 do -- chỉ follow 10 lần để tránh lag
					if entityPrimaryPart and humanoidRootPart then
						local tween_info = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
						local tween = TweenService:Create(entityPrimaryPart, tween_info, {
							CFrame = humanoidRootPart.CFrame
						})
						tween:Play()
						tween.Completed:Wait()
					end
					wait(0.1)
				end
			end)
		end
	end
end)

--====== Run Entity ======--
entity:Run()
