-- Services (Lấy tất cả các dịch vụ cần thiết ở đầu script)
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Debris = game:GetService("Debris")
local SoundService = game:GetService("SoundService")

-- Requirements
local CameraShaker = require(ReplicatedStorage.CameraShaker)

-- Constants
local RIPPER_WAIT_TIME = 4
local RIPPER_JUMPSCARE_MODEL_ID = "76305076231751"
local RIPPER_SOUND_CRASH_URL = "https://github.com/Brololto/Angler-sounds/blob/main/lv_0_20241221185918%20(1).mp3?raw=true"
local RIPPER_SOUND_CRASH_NAME = "Crashund"
local RIPPER_JUMPSCARE_IMAGE_ID_1 = "94547864377343" -- Jumpscare flash image 1
local RIPPER_JUMPSCARE_IMAGE_ID_2 = "76637426417491" -- Jumpscare flash image 2
local RIPPER_MOVEMENT_SOUND_ID = "6963538865"
local RIPPER_DESPAWN_SOUND_ID = "1837829565"
local RIPPER_SPAWN_SOUND_ID = "9125713501"
local RIPPER_INITIAL_LIGHT_COLOR = Color3.new(1, 0, 0) -- Đỏ
local RIPPER_ATTACK_HITBOX_DISTANCE = 50 -- Khoảng cách hitbox để Ripper tấn công

-- Player and Character References
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- State variables
local IsDead = false -- Sử dụng để ngăn jumpscare lặp lại hoặc hành vi không mong muốn
local MovementFreezeConnection
local CameraLookConnection
local RipperDetectionConnection -- Biến để quản lý kết nối phát hiện Ripper

-- Utility Function to get GitHub Sound (LƯU Ý: Chức năng này chỉ hoạt động trong môi trường exploit/injector)
local function GetGitSound(GithubSnd, SoundName)
    local url = GithubSnd
    if not isfile(SoundName .. ".mp3") then
        -- This part requires a file system access which is not standard in Roblox client scripts
        -- It will only work in specific environments (e.g., exploits)
        warn("GetGitSound: 'writefile' or 'game:HttpGet' not available in standard Roblox client. Skipping sound download.")
        return nil
    end
    local sound = Instance.new("Sound")
    sound.SoundId = (getcustomasset or getsynasset)(SoundName .. ".mp3") -- These are also non-standard Roblox functions
    return sound
end

-- Helper function to control player movement
local function freezePlayerMovement(shouldFreeze)
    if not Character or not Character:FindFirstChildOfClass("Humanoid") then return end
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    if shouldFreeze then
        if MovementFreezeConnection then MovementFreezeConnection:Disconnect() end
        MovementFreezeConnection = RunService.Heartbeat:Connect(function()
            Humanoid.WalkSpeed = 0
            Humanoid.JumpPower = 0
        end)
    else
        if MovementFreezeConnection then
            MovementFreezeConnection:Disconnect()
            MovementFreezeConnection = nil
        end
        Humanoid.WalkSpeed = 16 -- Giá trị mặc định của Roblox
        Humanoid.JumpPower = 50 -- Giá trị mặc định của Roblox
    end
end

-- Helper function to manage camera
local function lockCameraToModel(model)
    local Camera = Workspace.CurrentCamera
    Camera.CameraType = Enum.CameraType.Scriptable

    local tweenInfo = TweenInfo.new(0.5)
    local tween = TweenService:Create(Camera, tweenInfo, {CFrame = CFrame.new(Camera.CFrame.Position, model:GetPivot().Position)})
    tween:Play()
    tween.Completed:Wait()

    if CameraLookConnection then CameraLookConnection:Disconnect() end
    CameraLookConnection = RunService.RenderStepped:Connect(function()
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, model:GetPivot().Position)
    end)
end

local function unlockCamera()
    if CameraLookConnection then
        CameraLookConnection:Disconnect()
        CameraLookConnection = nil
    end
    local Camera = Workspace.CurrentCamera
    Camera.CameraType = Enum.CameraType.Custom -- Đặt lại loại camera
end

-- Function to handle camera shaking
local function startCameraShake(magnitude, roughness, fadeInTime, duration, frequency, octaves)
    local camera = Workspace.CurrentCamera
    local camShake = CameraShaker.new(Enum.RenderPriority.Camera.Value, function(shakeCf)
        camera.CFrame = camera.CFrame * shakeCf
    end)
    camShake:Start()
    camShake:ShakeOnce(magnitude, roughness, fadeInTime, duration, frequency, octaves)
end

-- Function to change room lights
local function changeRoomLights(color)
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local colorTween = {Color = color}

    for _, v in pairs(Workspace.CurrentRooms:GetDescendants()) do
        if v:IsA("Light") then
            TweenService:Create(v, tweenInfo, colorTween):Play()
        end
        if v.Parent and v.Parent.Name == "LightFixture" then
            TweenService:Create(v.Parent, tweenInfo, colorTween):Play()
        end
    end
end

-- Function to animate entity movement through rooms
local function animateEntityThroughRooms(entityModel, startRoomOffset, numRoomsToMove)
    local currentRoomValue = ReplicatedStorage.GameData.LatestRoom.Value
    local rooms = Workspace.CurrentRooms

    for i = 0, numRoomsToMove - 1 do
        local roomOffset = startRoomOffset + i
        local room = rooms:FindFirstChild(tostring(roomOffset))

        if room and room:FindFirstChild("RoomEntrance") then
            local targetCFrame = room.RoomEntrance.CFrame * CFrame.new(0, 6, 0) -- Offset Y cho vị trí trên mặt đất
            
            -- Điều chỉnh vị trí cho phòng cuối cùng trong chuỗi di chuyển (nếu cần Ripper đi xa hơn)
            if i == numRoomsToMove - 1 then
                targetCFrame = targetCFrame * CFrame.new(0, 0, -3) -- Tiến thêm 3 stud vào phòng
            end

            local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
            local tween = TweenService:Create(entityModel.PrimaryPart, tweenInfo, {CFrame = targetCFrame})
            tween:Play()
            tween.Completed:Wait()
        else
            warn("Không tìm thấy phòng số:", roomOffset, "hoặc RoomEntrance của nó. Dừng di chuyển Ripper.")
            break
        end
    end
end

--- RIIPER LOGIC ---
local function ripperJumpscare()
    if IsDead then return end -- Ngăn jumpscare lặp lại
    IsDead = true

    -- Model Jumpscare
    local r = game:GetObjects("rbxassetid://" .. RIPPER_JUMPSCARE_MODEL_ID)[1]
    r.Parent = Workspace

    -- Camera
    lockCameraToModel(r)

    -- Freeze movement
    freezePlayerMovement(true)

    -- Jumpscare Model Position & Particle Effect
    local deathPart = Workspace:FindFirstChild("Death") -- 'Death' part dùng để định vị Ripper
    if deathPart and deathPart:FindFirstChild("PrimaryPart") then
        r:SetPrimaryPartCFrame(deathPart.PrimaryPart.CFrame * CFrame.new(0, 1, 0))
    else
        warn("Không tìm thấy 'Death' part hoặc PrimaryPart của nó để định vị Ripper. Đặt vị trí dự phòng.")
        r:SetPrimaryPartCFrame(HumanoidRootPart.CFrame * CFrame.new(0, 10, -5)) -- Vị trí dự phòng
    end

    for _, v in pairs(r:GetDescendants()) do
        if v:IsA("ParticleEmitter") then
            v.Rate = 9999999
            v.TimeScale = 0 -- Dừng phát sau burst
        end
    end

    -- Sound (Using GetGitSound, remember the limitations)
    local crashSound = GetGitSound(RIPPER_SOUND_CRASH_URL, RIPPER_SOUND_CRASH_NAME)
    if crashSound then
        crashSound.Volume = 4
        crashSound.Parent = Workspace
        crashSound:Play()
        Debris:AddItem(crashSound, 5) -- Dọn dẹp âm thanh
    end
    task.wait(1)

    -- Jumpscare UI (Flashing Image)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RandomImageGui"
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    screenGui.IgnoreGuiInset = true

    local redImage = Instance.new("ImageLabel")
    redImage.Size = UDim2.new(1, 0, 1, 0)
    redImage.BackgroundTransparency = 1
    redImage.Image = RIPPER_JUMPSCARE_IMAGE_ID_2 -- Image 2 ban đầu
    redImage.ImageTransparency = 1
    redImage.Parent = screenGui

    task.spawn(function()
        while redImage.Parent do
            redImage.Image = RIPPER_JUMPSCARE_IMAGE_ID_1
            task.wait(0.1)
            redImage.Image = RIPPER_JUMPSCARE_IMAGE_ID_2
            task.wait(0.1)
        end
    end)
    TweenService:Create(redImage, TweenInfo.new(0.5), {ImageTransparency = 0}):Play() -- Fade in image

    task.wait(2) -- Thời gian hiển thị jumpscare

    -- Apply damage and clean up
    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:TakeDamage(100) -- Kill player
    end
    r:Destroy()

    local fadeOutTweenInfo = TweenInfo.new(0.5)
    TweenService:Create(redImage, fadeOutTweenInfo, {ImageTransparency = 1}):Play()
    fadeOutTweenInfo.Completed:Wait() -- Chờ fade out hoàn tất
    screenGui:Destroy()

    -- Update Death Cause
    local gameStats = ReplicatedStorage.GameData:FindFirstChild("GameStats")
    if gameStats and gameStats:FindFirstChild("Player_" .. LocalPlayer.Name) and gameStats["Player_" .. LocalPlayer.Name]:FindFirstChild("Total") then
        gameStats["Player_" .. LocalPlayer.Name].Total.DeathCause.Value = "Ripper"
    end

    -- Reset camera and movement
    unlockCamera()
    freezePlayerMovement(false)
end

-- Ripper Main Event Loop
task.spawn(function()
    while true do -- Vòng lặp chính của sự kiện Ripper
        task.wait(RIPPER_WAIT_TIME) -- Chờ 175 giây trước khi kiểm tra điều kiện xuất hiện

        -- Chờ cho đến khi Seek, phòng 50 hoặc 100 KHÔNG hoạt động, và KHÔNG ở phòng 6
        repeat
            task.wait()
        until not Workspace:FindFirstChild("SeekMovingNewClone")
            and not Workspace.CurrentRooms:FindFirstChild("50")
            and not Workspace.CurrentRooms:FindFirstChild("100")
            and not (ReplicatedStorage.GameData.LatestRoom and ReplicatedStorage.GameData.LatestRoom.Value == 6)

        -- Chờ cho giá trị LatestRoom thay đổi (ngụ ý người chơi đã di chuyển đến một phòng mới sau khi các điều kiện được đáp ứng)
        ReplicatedStorage.GameData.LatestRoom:GetPropertyChangedSignal("Value"):Wait()

        -- Đặt lại trạng thái chết cho lần gặp Ripper mới
        IsDead = false

        -- Thay đổi đèn thành màu đỏ
        changeRoomLights(RIPPER_INITIAL_LIGHT_COLOR)

        -- Phát âm thanh xuất hiện
        local spawnSound = Instance.new("Sound")
        spawnSound.Parent = Workspace
        spawnSound.SoundId = "rbxassetid://" .. RIPPER_SPAWN_SOUND_ID
        spawnSound.PlaybackSpeed = 0.6
        spawnSound.Volume = 10
        local pitchShift = Instance.new("PitchShiftSoundEffect")
        pitchShift.Name = "PitchShiftSoundEffect"
        pitchShift.Parent = spawnSound
        pitchShift.Octave = 0.875
        spawnSound:Play()
        Debris:AddItem(spawnSound, 5) -- Dọn dẹp âm thanh sau vài giây

        -- Tải mô hình Ripper
        local ripperModel = game:GetObjects("rbxassetid://132675601442627")[1]
        if not ripperModel then
            warn("Không thể tải mô hình Ripper. Hãy kiểm tra asset ID: 132675601442627")
            continue -- Bỏ qua lần lặp này nếu mô hình không tải được
        end

        ripperModel.Parent = Workspace
        local ambushPart = ripperModel.PrimaryPart or ripperModel:FindFirstChild("Ripe")
        if not ambushPart then
            warn("Mô hình Ripper không có PrimaryPart hoặc part 'Ripe'. Hủy mô hình.")
            ripperModel:Destroy()
            continue
        end
        ambushPart.CanCollide = false
        ambushPart.Anchored = true -- neo lại ban đầu

        -- Rung camera ban đầu
        startCameraShake(8, 5, 0, 5.5, 1, 0)

        -- Định vị Ripper tại RoomEntrance của phòng hiện tại - 5
        local initialRoomOffset = ReplicatedStorage.GameData.LatestRoom.Value - 5
        local initialRoom = Workspace.CurrentRooms:FindFirstChild(tostring(initialRoomOffset))
        if initialRoom and initialRoom:FindFirstChild("RoomEntrance") then
            ambushPart.Position = initialRoom.RoomEntrance.Position
        else
            warn("Không tìm thấy phòng khởi đầu Ripper hoặc RoomEntrance của nó. Hủy Ripper.")
            ripperModel:Destroy()
            continue
        end

        task.wait(8.5) -- Chờ trước khi di chuyển và phát âm thanh

        task.spawn(function() -- Âm thanh di chuyển của Ripper
            task.wait(3.2) -- Độ trễ trước khi bắt đầu âm thanh di chuyển
            if not ambushPart.Parent then return end -- Kiểm tra nếu Ripper đã bị hủy
            local ripperMovingSound = Instance.new("Sound")
            ripperMovingSound.Volume = 9
            ripperMovingSound.Parent = ambushPart
            ripperMovingSound.SoundId = "rbxassetid://" .. RIPPER_MOVEMENT_SOUND_ID
            ripperMovingSound.PlaybackSpeed = 0.2
            ripperMovingSound.RollOffMinDistance = 15
            ripperMovingSound:Play()
            Debris:AddItem(ripperMovingSound, 20) -- Dọn dẹp sau khi có thể kết thúc phát
        end)

        task.wait(0.1) -- Chờ nhỏ

        -- Hoạt ảnh Ripper di chuyển qua các phòng
        animateEntityThroughRooms(ripperModel, initialRoomOffset, 7) -- Di chuyển qua 7 phòng (từ romer đến previousroo)

        -- Đảm bảo Ripper không bị neo và kiểm tra phát hiện người chơi
        ambushPart.Anchored = false -- Ripper không còn neo sau khi di chuyển

        -- Logic phát hiện người chơi và kích hoạt jumpscare/despawn
        if RipperDetectionConnection then RipperDetectionConnection:Disconnect() end -- Ngắt kết nối cũ nếu có
        RipperDetectionConnection = RunService.Heartbeat:Connect(function()
            if not ambushPart.Parent or IsDead or not Character or not HumanoidRootPart then
                RipperDetectionConnection:Disconnect()
                return
            end

            local origin = ambushPart.Position
            local direction = (HumanoidRootPart.Position - origin).Unit
            local ray = Ray.new(origin, direction * RIPPER_ATTACK_HITBOX_DISTANCE) -- Hitbox tấn công

            local result = Workspace:Raycast(ray.Origin, ray.Direction)

            if result and result.Instance.Parent == Character then
                if not LocalPlayer.Character:GetAttribute("Hiding") then
                    RipperDetectionConnection:Disconnect() -- Dừng phát hiện
                    ripperJumpscare() -- Kích hoạt jumpscare
                end
            end
        end)

        task.wait(5) -- Cho Ripper một khoảng thời gian để phát hiện người chơi sau khi di chuyển/bỏ neo

        if not IsDead then -- Nếu người chơi không bị Ripper tóm được
            -- Phát âm thanh biến mất và rung
            local despawnSound = Instance.new("Sound")
            despawnSound.Parent = ambushPart
            despawnSound.Volume = 10
            despawnSound.SoundId = "rbxassetid://" .. RIPPER_DESPAWN_SOUND_ID
            despawnSound:Play()
            Debris:AddItem(despawnSound, 5)

            startCameraShake(5, 5, 0, 5.5, 1, 0) -- Rung khi biến mất

            -- Mở cửa phòng hiện tại
            local currentRoomDoor = Workspace.CurrentRooms:FindFirstChild(tostring(ReplicatedStorage.GameData.LatestRoom.Value))
            if currentRoomDoor and currentRoomDoor:FindFirstChild("Door") and currentRoomDoor.Door:FindFirstChild("ClientOpen") then
                currentRoomDoor.Door.ClientOpen:FireServer()
            end

            -- Hiển thị thành tích
            local achievementGiver = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Custom%20Achievements/Source.lua"))()
            achievementGiver({
                Title = "Torn Apart",
                Desc = "Don't leave too early",
                Reason = "Encounter Ripper",
                Image = "rbxassetid://85743086408147"
            })
        end

        ripperModel:Destroy() -- Dọn dẹp mô hình Ripper
        if RipperDetectionConnection then RipperDetectionConnection:Disconnect() end -- Đảm bảo đã ngắt kết nối
    end
end)
