---====== Load spawner ======---

local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

---====== Create entity ======---

local entity = spawner.Create({
	Entity = {
		Name = "HUGERRORED",
		Asset = "rbxassetid://122309151397392",
		HeightOffset = 0
	},
	Lights = {
		Flicker = {
			Enabled = false,
			Duration = 1
		},
		Shatter = true,
		Repair = false
	},
	Earthquake = {
		Enabled = false
	},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1} -- Magnitude, Roughness, FadeIn, FadeOut
	},
	Movement = {
		Speed = 400,
		Delay = 17,
		Reversed = false
	},
	Rebounding = {
		Enabled = true,
		Type = "Ambush", -- "Blitz"
		Min = 4,
		Max = 4,
		Delay = 0.2
	},
	Damage = {
		Enabled = true,
		Range = 40,
		Amount = 125
	},
	Crucifixion = {
		Enabled = true,
		Range = 40,
		Resist = false,
		Break = true
	},
	Death = {
		Type = "Guiding", -- "Curious"
		Hints = {"You die to owner", "GOODBYE", "I can't help you", "HE is..."},
		Cause = ""
	}
})

---====== Debug entity ======---

entity:SetCallback("OnSpawned", function()
    print("Entity has spawned")
local cue2 = Instance.new("Sound")
    cue2.Parent = game.Workspace
    cue2.Name = "Spawn"
    cue2.SoundId = "rbxassetid://9125712561"
    cue2.Volume = 4.5
    cue2.PlaybackSpeed = 0.7
    cue2:Play()
end)

entity:SetCallback("OnStartMoving", function()
    print("Entity has started moving")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
    if firstTime == true then
        print("Entity has entered room: ".. room.Name.. " for the first time")
    else
        print("Entity has entered room: ".. room.Name.. " again")
    end
end)

entity:SetCallback("OnLookAt", function(lineOfSight)
	if lineOfSight == true then
		print("Player is looking at entity")
	else
		print("Player view is obstructed by something")
	end
end)

entity:SetCallback("OnRebounding", function(startOfRebound)
    if startOfRebound == true then
        print("Entity has started rebounding")
	else
        print("Entity has finished rebounding")
	end
end)

entity:SetCallback("OnDespawning", function()
    print("Entity is despawning")
end)

entity:SetCallback("OnDespawned", function()
    print("Entity has despawned")
end)

entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth == 0 then
		print("Entity has killed the player")

  local player = game.Players.LocalPlayer
local playergui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = playergui
screenGui.Name = "Screen Gui"
screenGui.IgnoreGuiInset = true


local stop = false
local done = false

local kill = Instance.new("Sound")
kill.Parent = workspace
kill.PlaybackSpeed = 1
kill.SoundId = "rbxassetid://7027640335"
kill.Name = "Dear god death sound chat"
kill.Volume = 100
kill.Looped = true



local flange = Instance.new("FlangeSoundEffect")
flange.Parent = kill
flange.Depth = 0.15
flange.Mix = 0.6
flange.Rate = 0.1

local trem = Instance.new("TremoloSoundEffect")
trem.Parent = kill
trem.Depth = 0.3
trem.Duty = 0.3
trem.Frequency = 1

local pitch = Instance.new("PitchShiftSoundEffect")
pitch.Parent = kill
pitch.Octave = 1

local distort = Instance.new("DistortionSoundEffect")
distort.Parent = kill
distort.Level = 0.2

kill:Play()

local Backgroun = Instance.new("ImageLabel")
Backgroun.Parent = screenGui
Backgroun.Size = UDim2.new(1, 0, 1, 0)
Backgroun.ImageTransparency = 0.5
Backgroun.BackgroundTransparency = 0
Backgroun.BackgroundColor3 = Color3.new(0, 0, 0)
Backgroun.Image = "rbxassetid://1712510813"

task.wait() -- This task.wait() here doesn't have much purpose unless you specifically want a tiny delay before the next part.

local face = Instance.new("ImageLabel")
face.Parent = screenGui
face.AnchorPoint = Vector2.new(0.5, 0.5)
face.Position = UDim2.new(0.5, 0, 0.589, 0)
face.Size = UDim2.new(0, 300, 0, 300)
face.Image = "rbxassetid://11395249132"
face.ImageTransparency = 0
face.BackgroundTransparency = 1


-- Task for background transparency and image transparency blinking
task.spawn(function()
    while task.wait() do
        if stop == true then
            break
        end
        Backgroun.BackgroundTransparency = 0
        Backgroun.ImageTransparency = 1
        task.wait(0.1)
        Backgroun.BackgroundTransparency = 1
        Backgroun.ImageTransparency = 0
    end
end)

-- Task for background image changing
task.spawn(function()
    while task.wait() do
        if stop == true then
            break
        end
        Backgroun.Image = "rbxassetid://131073231978514"
        task.wait(0.0589)
        Backgroun.Image = "rbxassetid://105841646930424"
    end
end)

-- Task for face rotation and image changing
task.spawn(function()
    while task.wait() do
        if stop == true then
            break
        end
        face.Rotation = 10
        face.Image = "rbxassetid://87334855659812"
        task.wait(0.0589)
        face.Rotation = -10
        face.Image = "rbxassetid://87334855659812"
        task.wait(0.0589)
        face.Rotation = 10
        face.Image = "rbxassetid://87334855659812"
        task.wait(0.0589)
        face.Rotation = -10
    end
end)


task.wait() -- Another task.wait() here, consider if it's truly necessary.


local text = Instance.new("ImageLabel")
text.Parent = screenGui
text.AnchorPoint = Vector2.new(0.5, 0.5)
text.Position = UDim2.new(0.5, 0, 0.5, 0)
text.Size = UDim2.new(0, 150, 0, 150)
text.Image = "rbxassetid://117106082021449"
text.ImageTransparency = 0
text.BackgroundTransparency = 1

-- Task for text image changing
task.spawn(function()
    while task.wait() do
        if stop == true then
            break
        end
        text.Image = "rbxassetid://88490592395124"
        task.wait(0.0589)
        text.Image = "rbxassetid://99132041298170"
    end
end)

-- Task for text position (random movement)
task.spawn(function()
    while task.wait() do
        if stop == true then
            break
        end
        text.Position = UDim2.new(Random.new():NextNumber(0, 0.5), 0, Random.new():NextNumber(0, 0.6), 0)
        task.wait() -- This task.wait() means the text moves every other frame if the game runs at 60 FPS.
        text.Position = UDim2.new(Random.new():NextNumber(0, 0.5), 0, Random.new():NextNumber(0, 0.6), 0)
    end
end)

-- Task for text image transparency blinking
task.spawn(function()
    while task.wait() do
        if stop == true then
            break
        end
        text.ImageTransparency = 0
        task.wait() -- Same as above, this will cause it to blink every other frame.
        text.ImageTransparency = 1
    end
end)


wait(2.954) -- Using 'wait()' is deprecated. Use 'task.wait()' instead.
stop = true
kill:Stop()
task.wait() -- This task.wait() just adds a tiny delay.

-- This entire block below is outside any function or thread, and it's also nested incorrectly.
-- This is likely the main source of your "sai cho nao khong" (where is it wrong) issue.
-- It will only run ONCE after the 1.6 second wait and 'stop = true'.
-- The 'while task.wait() do' loop will never be entered because it's not in a separate task.
-- Also, the closing 'end' statements at the very end are mismatched.

-- This part needs to be in a separate task.
-- Corrected structure would be something like this:
task.spawn(function()
    while task.wait() do
        if done == true then
            break
        end
        face.ImageTransparency = 1
        text.ImageTransparency = 1
        Backgroun.ImageTransparency = 1
        Backgroun.BackgroundTransparency = 1
    end
end)

task.wait(0.1) -- These two task.wait(0.1) seem redundant right after the loop above (if it were running).
task.wait(0.1)
task.wait(0.7)
done = true
	else
		print("Entity has damaged the player")

	end
end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

---====== Run entity ======---

entity:Run()
