local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

local entity = spawner.Create({
    Entity = {
        Name = "Ripper",
        Asset = "rbxassetid://118750853123155",
        HeightOffset = 0
    },
    Lights = {
        Flicker = { Enabled = false, Duration = 1 },
        Shatter = true,
        Repair = false
    },
    Earthquake = { Enabled = true },
    CameraShake = {
        Enabled = true,
        Range = 100,
        Values = {1.5, 20, 0.1, 1}
    },
    Movement = { Speed = 185, Delay = 5, Reversed = false },
    Rebounding = { Enabled = false },
    Damage = { Enabled = true, Range = 40, Amount = 125 }, -- Thiết lập Damage để Ripper gây sát thương
    Crucifixion = { Enabled = true, Range = 40, Resist = false, Break = true },
    Death = {
        Type = "Guiding",
        Hints = {"You die to Ripper", "HE is crazy", "IF you see room to red and hear a scream", "Hide now he is move"},
        Cause = "Ripper" -- Đã sửa Cause thành "Ripper"
    }
})

-- Services (Luôn lấy các dịch vụ ở đầu script)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Debris = game:GetService("Debris")

-- Player and Camera References
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- State variables for Jumpscare
local isJumpscareActive = false
local entityModel_Global -- Biến global để lưu trữ mô hình thực thể từ spawner
local entityPart_Global   -- Biến global để lưu trữ PrimaryPart của thực thể
local cameraConn, inputConn1, inputConn2
local originalTintColor
local originalContrast
local anchorConn = nil
local particleFreezeConn = nil
local originalParticleRates = {}
local activeSounds = {}

--- Helper Functions ---

local function freezeParticles()
    originalParticleRates = {}
    for _, descendant in ipairs(workspace:GetDescendants()) do
        if descendant:IsA("ParticleEmitter") then
            if descendant.Enabled and descendant.Rate > 0 then
                originalParticleRates[descendant] = descendant.Rate
                descendant.Rate = 0
                descendant.Enabled = false -- Tắt emitter hoàn toàn để đảm bảo
            end
        end
    end
    print("Đã đóng băng tất cả Particle Emitters.")
end

local function unfreezeParticles()
    for particle, originalRate in pairs(originalParticleRates) do
        if particle and particle.Parent then
            particle.Enabled = true
            particle.Rate = originalRate
        end
    end
    originalParticleRates = {}
    print("Đã khôi phục tất cả Particle Emitters.")
end

local function executeRealJumpscare()
    -- Ngắt kết nối UserInputService sớm để tránh xung đột
    if inputConn1 then inputConn1:Disconnect(); inputConn1 = nil end
    if inputConn2 then inputConn2:Disconnect(); inputConn2 = nil end

    local jumpscareGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    jumpscareGui.Name = "JumpscareGUI"
    jumpscareGui.IgnoreGuiInset = true -- Đảm bảo jumpscare che toàn màn hình

    local jumpscareImg = Instance.new("ImageLabel", jumpscareGui)
    jumpscareImg.Size = UDim2.new(1, 0, 1, 0)
    jumpscareImg.BackgroundTransparency = 1
    jumpscareImg.ImageTransparency = 1
    jumpscareImg.Image = "rbxassetid://11826279208" -- Jumpscare image 1
    jumpscareImg.ZIndex = 10

    local jumpscareSound = Instance.new("Sound", workspace)
    jumpscareSound.SoundId = "rbxassetid://6567183465"
    jumpscareSound.Volume = 3
    jumpscareSound:Play()
    table.insert(activeSounds, jumpscareSound)

    TweenService:Create(jumpscareImg, TweenInfo.new(0.1), {ImageTransparency = 0}):Play()

    -- Điều chỉnh ánh sáng trong jumpscare
    Lighting.MainColorCorrection.TintColor = Color3.fromRGB(250, 0, 0)
    Lighting.MainColorCorrection.Contrast = 10
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(0.25), {Contrast = 0}):Play()
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(0.5), {TintColor = originalTintColor}):Play() -- Fade về màu ban đầu

    task.wait(1.5)

    -- Hiển thị hình ảnh đầu lâu thứ hai
    jumpscareImg.ImageTransparency = 1
    jumpscareImg.Image = "rbxassetid://YOUR_SKULL_IMAGE_ID_HERE" -- **Cần thay đổi ID này**
    jumpscareImg.ZIndex = 12
    TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 0}):Play()

    local skullSound = Instance.new("Sound", workspace)
    skullSound.SoundId = "rbxassetid://YOUR_SKULL_SOUND_ID_HERE" -- **Cần thay đổi ID này**
    skullSound.Volume = 2
    skullSound:Play()
    table.insert(activeSounds, skullSound)

    task.wait(2)

    TweenService:Create(jumpscareImg, TweenInfo.new(0.5), {ImageTransparency = 1}):Play().Completed:Wait()

    -- Dọn dẹp sau jumpscare
    if cameraConn then cameraConn:Disconnect(); cameraConn = nil end
    if anchorConn then anchorConn:Disconnect(); anchorConn = nil end
    if particleFreezeConn then particleFreezeConn:Disconnect(); particleFreezeConn = nil end
    Camera.CameraType = Enum.CameraType.Custom
    isJumpscareActive = false
    jumpscareGui:Destroy()

    -- Dừng và dọn dẹp tất cả âm thanh đang hoạt động
    for _, sound in ipairs(activeSounds) do
        if sound and sound.Playing then
            sound:Stop()
        end
        if sound and sound.Parent then
            sound:Destroy()
        end
    end
    activeSounds = {}

    unfreezeParticles() -- Khôi phục hiệu ứng hạt

    local char = LocalPlayer.Character
    if char then
        local hum = char:FindFirstChild("Humanoid")
        if hum then
            hum.WalkSpeed = 16
            hum.JumpPower = 50
            hum.AutoRotate = true
            hum.PlatformStand = false
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = false
                end
            end
        end
    end
    print("Jumpscare đã kết thúc và trạng thái người chơi đã được khôi phục.")
end

local function doJumpscareWithEffect()
    if isJumpscareActive then return end -- Ngăn chặn jumpscare kép
    isJumpscareActive = true
    print("Bắt đầu hiệu ứng Jumpscare.")

    local char = LocalPlayer.Character
    if char then
        local hum = char:FindFirstChild("Humanoid")
        if hum then
            hum.WalkSpeed = 0
            hum.JumpPower = 0
            hum.AutoRotate = false
            hum.PlatformStand = true -- Đóng băng người chơi tại chỗ
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = true -- Neo tất cả các phần của người chơi
                end
            end
        end
    end

    Camera.CameraType = Enum.CameraType.Scriptable
    if cameraConn then cameraConn:Disconnect() end
    cameraConn = RunService.RenderStepped:Connect(function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") and entityPart_Global and entityModel_Global and entityModel_Global.Parent then
            Camera.CFrame = CFrame.new(LocalPlayer.Character.Head.Position, entityPart_Global.Position)
        else
            warn("Không thể khóa camera: entityPart_Global, đầu người chơi hoặc entityModel_Global không tồn tại. Ngắt kết nối camera.")
            if cameraConn then cameraConn:Disconnect(); cameraConn = nil end
        end
    end)
    print("Camera đã được khóa vào entity.")

    if anchorConn then anchorConn:Disconnect() end
    anchorConn = RunService.RenderStepped:Connect(function()
        if entityModel_Global and entityModel_Global.Parent then
            for _, part in ipairs(entityModel_Global:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Anchored = true
                end
            end
        else
            -- Nếu entityModel không còn tồn tại, ngắt kết nối neo
            if anchorConn then anchorConn:Disconnect(); anchorConn = nil end
        end
    end)
    print("Bắt đầu liên tục neo entity.")

    freezeParticles() -- Đóng băng tất cả các hạt

    -- Chặn input của người chơi
    inputConn1 = UserInputService.InputBegan:Connect(function() return Enum.ContextActionResult.Sink end)
    inputConn2 = UserInputService.InputChanged:Connect(function() return Enum.ContextActionResult.Sink end)

    local staticGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    staticGui.Name = "StaticGUI"
    staticGui.IgnoreGuiInset = true -- Đảm bảo che toàn màn hình
    local staticImg = Instance.new("ImageLabel", staticGui)
    staticImg.Size = UDim2.new(1, 0, 1, 0)
    staticImg.BackgroundTransparency = 1
    staticImg.ImageTransparency = 0
    staticImg.Image = "rbxassetid://1568285513" -- Static image
    staticImg.ZIndex = 11

    local staticSound = Instance.new("Sound", workspace)
    staticSound.SoundId = "rbxassetid://1845110821" -- Static sound
    staticSound.Volume = 1
    staticSound.Looped = true
    staticSound:Play()
    table.insert(activeSounds, staticSound)

    local currentBrightness = Lighting.Brightness
    TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = -1}):Play() -- Giảm độ sáng

    task.wait(1.5) -- Thời gian hiển thị nhiễu và âm thanh nhiễu

    staticImg.ImageTransparency = 1
    if staticSound and staticSound.Playing then staticSound:Stop() end
    staticSound:Destroy()
    staticGui:Destroy()

    TweenService:Create(Lighting, TweenInfo.new(0.5), {Brightness = currentBrightness}):Play() -- Khôi phục độ sáng

    Lighting.MainColorCorrection.TintColor = Color3.fromRGB(250, 0, 0) -- Đặt lại màu đỏ
    Lighting.MainColorCorrection.Contrast = 0

    task.wait(0.5) -- Chờ trước khi thực hiện jumpscare chính

    executeRealJumpscare() -- Kích hoạt jumpscare chính
end

--- Entity Spawner Callbacks ---

entity:SetCallback("OnSpawned", function()
    print("Thực thể đã xuất hiện")
    local spawnSound = Instance.new("Sound", workspace)
    spawnSound.SoundId = "rbxassetid://9125713501"
    spawnSound.Volume = 10 -- Đã điều chỉnh âm lượng cho phù hợp (0-10)
    spawnSound.PlaybackSpeed = 0.525
    spawnSound:Play()
    Debris:AddItem(spawnSound, spawnSound.TimeLength + 1)

    -- Lưu trạng thái ánh sáng ban đầu
    originalTintColor = Lighting.MainColorCorrection.TintColor
    originalContrast = Lighting.MainColorCorrection.Contrast

    -- Hiệu ứng ánh sáng khi spawn
    Lighting.MainColorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
    Lighting.MainColorCorrection.Contrast = 10
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(2.5), {Contrast = 0}):Play()
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(5), {TintColor = Color3.fromRGB(250, 0, 0)}):Play()

    -- Gán mô hình thực thể và PrimaryPart vào biến global
    entityModel_Global = entity.Model
    if entityModel_Global then
        entityPart_Global = entityModel_Global.PrimaryPart or entityModel_Global:FindFirstChildWhichIsA("BasePart")
        if not entityPart_Global then
            warn("Entity model không có PrimaryPart hoặc BasePart nào! Khóa camera và neo có thể không hoạt động.")
            -- Tìm kiếm bất kỳ BasePart nào làm fallback
            for _, child in ipairs(entityModel_Global:GetChildren()) do
                if child:IsA("BasePart") then
                    entityPart_Global = child
                    break
                end
            end
        end
    else
        warn("entity.Model là nil sau khi spawn!")
    end
    print("Entity đã xuất hiện và di chuyển bình thường.")
end)

entity:SetCallback("OnStartMoving", function()
    print("Thực thể đã bắt đầu di chuyển.")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
    print(("Thực thể đã vào phòng: %s (%s)"):format(room.Name, firstTime and "lần đầu" or "lần nữa"))
end)

entity:SetCallback("OnLookAt", function(los)
    -- print(los and "Người chơi đang nhìn vào thực thể" or "Góc nhìn bị cản trở")
end)

entity:SetCallback("OnRebounding", function(start)
    print(start and "Bật lại bắt đầu" or "Bật lại kết thúc")
end)

entity:SetCallback("OnDespawning", function()
    print("Thực thể đang biến mất")
    -- Đảm bảo Ripper không còn neo khi despawn
    if entityModel_Global then
        for _, part in ipairs(entityModel_Global:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false
            end
        end
        print("Entity đã được gỡ neo.")
    end
end)

entity:SetCallback("OnDespawned", function()
    print("Thực thể đã biến mất")
    -- Phát âm thanh biến mất và khôi phục ánh sáng
    local cue2 = Instance.new("Sound")
    cue2.Parent = workspace
    cue2.Name = "Spawn"
    cue2.SoundId = "rbxassetid://1837829565"
    cue2.Volume = 10 -- Đã điều chỉnh âm lượng
    cue2.PlaybackSpeed = 1
    cue2:Play()
    Debris:AddItem(cue2, cue2.TimeLength + 1)

    task.wait(0.5) -- Chờ một chút sau âm thanh
    
    -- Khôi phục hiệu ứng ánh sáng
    Lighting.MainColorCorrection.TintColor = originalTintColor
    Lighting.MainColorCorrection.Contrast = originalContrast -- Đảm bảo về giá trị ban đầu của Contrast
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(2.5), {Contrast = originalContrast}):Play()
    TweenService:Create(Lighting.MainColorCorrection, TweenInfo.new(5), {TintColor = originalTintColor}):Play()
end)

-- *** Đây là callback quan trọng để kích hoạt jumpscare ***
entity:SetCallback("OnDamagePlayer", function(newHealth)
    if newHealth <= 0 then -- Nếu người chơi bị giết
        print("Thực thể đã giết người chơi, kích hoạt jumpscare.")
        doJumpscareWithEffect()
    else
        print("Thực thể đã gây sát thương cho người chơi, máu mới: ", newHealth)
    end
end)


-- KHÔNG CẦN CHỖ NÀY NỮA, VÌ JUMPSCARE ĐƯỢC KÍCH HOẠT TỪ ON_DAMAGE_PLAYER
-- local function onCharacterAdded(character)
--     local humanoid = character:FindFirstChildOfClass("Humanoid")
--     if humanoid then
--         if healthChangedConn then
--             healthChangedConn:Disconnect()
--         end
--         healthChangedConn = humanoid.HealthChanged:Connect(function(health)
--             if health <= 0 and not isJumpscareActive then
--                 doJumpscareWithEffect()
--             end
--         end)
--     end
-- end
-- player.CharacterAdded:Connect(onCharacterAdded)
-- if player.Character then
--     onCharacterAdded(player.Character)
-- end

-- Chạy thực thể (đặt ở cuối script)
entity:Run()
