---====== Load spawner ======---

local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

local entity = spawner.Create({
    Entity = {
        Name = "Ripper",
        Asset = "rbxassetid://118750853123155",
        HeightOffset = 0
    },
    Lights = {
        Flicker = { Enabled = false, Duration = 1 },
        Shatter = true,
        Repair = false
    },
    Earthquake = { Enabled = true },
    CameraShake = {
        Enabled = true,
        Range = 100,
        Values = {1.5, 20, 0.1, 1}
    },
    Movement = { Speed = 185, Delay = 5, Reversed = false },
    Rebounding = { Enabled = false },
    Damage = { Enabled = true, Range = 40, Amount = 125 },
    Crucifixion = { Enabled = true, Range = 40, Resist = false, Break = true },
    Death = {
        Type = "Guiding",
        Hints = {"You die to Ripper","HE is crazy","IF you see room to red and hear a scream","Hide now he is move"},
        Cause = ""
    }
})

---====== Setup  =======---

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- Variables for jumpscare
local canJumpscare = false
local isJumpscare = false
local entityModel, entityPart
local cameraConn, inputConn1, inputConn2

---====== Existing Callbacks (unchanged) ======---

entity:SetCallback("OnSpawned", function()
    print("Entity has spawned")
    local cue2 = Instance.new("Sound")
    cue2.Parent = workspace
    cue2.Name = "Spawn"
    cue2.SoundId = "rbxassetid://9125713501"
    cue2.Volume = 9999
    cue2.PlaybackSpeed = 0.525
    cue2:Play()

    local lc = workspace:FindFirstChild("Lighting") or game:GetService("Lighting")
    lc.MainColorCorrection.TintColor = Color3.fromRGB(255,255,255)
    lc.MainColorCorrection.Contrast = 10
    TweenService:Create(lc.MainColorCorrection, TweenInfo.new(2.5), {Contrast=0}):Play()
    TweenService:Create(lc.MainColorCorrection, TweenInfo.new(5), {TintColor = Color3.fromRGB(250,0,0)}):Play()

    -- Setup jumpscare
    entityModel = entity.Model
    if entityModel then
        entityPart = entityModel.PrimaryPart or entityModel:FindFirstChildWhichIsA("BasePart")
        canJumpscare = true
    end
end)

entity:SetCallback("OnStartMoving", function() print("Entity has started moving") end)
entity:SetCallback("OnEnterRoom", function(room, firstTime)
    print(("Entity has entered room: %s (%s)"):format(room.Name, firstTime and "firstTime" or "again"))
end)
entity:SetCallback("OnLookAt", function(los)
    print(los and "Player is looking at entity" or "View obstructed")
end)
entity:SetCallback("OnRebounding", function(start)
    print(start and "Rebounding started" or "Rebounding ended")
end)
entity:SetCallback("OnDespawning", function() print("Entity is despawning") end)
entity:SetCallback("OnDespawned", function()
    print("Entity has despawned")
    local cue2 = Instance.new("Sound")
    cue2.Parent = workspace
    cue2.Name = "Spawn"
    cue2.SoundId = "rbxassetid://1837829565"
    cue2.Volume = 9999
    cue2.PlaybackSpeed = 1
    cue2:Play()

    wait(3)
    local lc = workspace:FindFirstChild("Lighting") or game:GetService("Lighting")
    lc.MainColorCorrection.TintColor = Color3.fromRGB(250,0,0)
    lc.MainColorCorrection.Contrast = 10
    TweenService:Create(lc.MainColorCorrection, TweenInfo.new(2.5), {Contrast=0}):Play()
    TweenService:Create(lc.MainColorCorrection, TweenInfo.new(5), {TintColor = Color3.fromRGB(255,255,255)}):Play()
end)
entity:SetCallback("OnDamagePlayer", function(newHealth)
    print(newHealth == 0 and "Entity has killed the player" or "Entity has damaged the player")
end)

---====== Jumpscare Logic After Run ======---

-- Function to perform jumpscare
local function doJumpscare()
    isJumpscare = true
    camera.CameraType = Enum.CameraType.Scriptable

    cameraConn = RunService.RenderStepped:Connect(function()
        if player.Character and player.Character:FindFirstChild("Head") and entityPart then
            camera.CFrame = CFrame.new(player.Character.Head.Position, entityPart.Position)
        end
    end)

    task.spawn(function()
        while isJumpscare do
            local hum = player.Character and player.Character:FindFirstChild("Humanoid")
            if hum then
                hum.WalkSpeed = 0
                hum.JumpPower = 0
                hum.AutoRotate = false
                hum.PlatformStand = true
                for _, part in ipairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") then part.Anchored = true end
                end
            end
            task.wait(0.05)
        end
    end)

    inputConn1 = UIS.InputBegan:Connect(function() if isJumpscare then return Enum.ContextActionResult.Sink end end)
    inputConn2 = UIS.InputChanged:Connect(function() if isJumpscare then return Enum.ContextActionResult.Sink end end)

    local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
    gui.Name = "JumpscareGUI"
    local img = Instance.new("ImageLabel", gui)
    img.Size = UDim2.new(1,0,1,0)
    img.BackgroundTransparency = 1
    img.ImageTransparency = 1
    img.Image = "rbxassetid://14865476959"

    TweenService:Create(img, TweenInfo.new(0.5), {ImageTransparency=0}):Play()
    local sound = Instance.new("Sound", workspace)
    sound.SoundId = "rbxassetid://6567183465"
    sound.Volume = 3
    sound:Play()

    task.wait(1.2)
    local hum = player.Character and player.Character:FindFirstChild("Humanoid")
    if hum then hum.Health = 0 end

    local fade = TweenService:Create(img, TweenInfo.new(0.5), {ImageTransparency=1})
    fade:Play()
    fade.Completed:Wait()

    cameraConn:Disconnect()
    inputConn1:Disconnect()
    inputConn2:Disconnect()
    camera.CameraType = Enum.CameraType.Custom
    isJumpscare = false
    gui:Destroy()
end

-- Start entity
entity:Run()

-- Heartbeat loop for jumpscare
RunService.Heartbeat:Connect(function()
    if not canJumpscare or isJumpscare then return end
    if not player.Character or not entityPart then return end

    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local dist = (hrp.Position - entityPart.Position).Magnitude
    if dist <= entity.Config.KillRange then
        local ray = workspace:Raycast(hrp.Position, entityPart.Position - hrp.Position, RaycastParams.new())
        if not ray or ray.Instance:IsDescendantOf(entityModel) then
            doJumpscare()
        end
    end
end)
