local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage") -- Thêm để kiểm soát sự kiện hoặc asset nếu cần
local Debris = game:GetService("Debris") -- Để tự động xóa GUI

-- ****** THAY THẾ CÁC ID TÀI SẢN NÀY VỚI HÌNH ẢNH JUMPSCARE CỦA BẠN ******
local JUMPSCARE_IMAGE_ID = "rbxassetid://101016395683805" -- <--- RẤT QUAN TRỌNG: Thay thế ID này
-- ********************************************************************

---====== Tải Spawner ======---

local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

-- Biến này sẽ giữ tham chiếu đến đối tượng Model thực tế của Singularity
local singularityModel = nil

---====== Tạo thực thể ======---

local entity = spawner.Create({
	Entity = {
		Name = "Singurlarty", -- Tên của thực thể
		Asset = "rbxassetid://102222671362687", -- ID tài sản của model Singularity
		HeightOffset = 0
	},
	Lights = {
		Flicker = {
			Enabled = false,
			Duration = 1
		},
		Shatter = true,
		Repair = false
	},
	Earthquake = {
		Enabled = false
	},
	CameraShake = {
		Enabled = true,
		Range = 100,
		Values = {1.5, 20, 0.1, 1} -- Cường độ, độ gồ ghề, thời gian mờ dần vào, thời gian mờ dần ra
	},
	Movement = {
		Speed = 560,
		Delay = 4,
		Reversed = false
	},
	Rebounding = {
		Enabled = true,
		Type = "Ambush", -- "Blitz"
		Min = 4,
		Max = 4,
		Delay = 0.2
	},
	Damage = {
		Enabled = true,
		Range = 70,
		Amount = 125
	},
	Crucifixion = {
		Enabled = true,
		Range = 70,
		Resist = false,
		Break = true
	},
	Death = {
		Type = "Guiding", -- "Curious"
		Hints = {"YOu die to a scary man", "remember", "you can't survive he", "HERE"},
		Cause = ""
	},
	Jumpscare = {
        Enabled = false, -- Tắt jumpscare mặc định của spawner để chúng ta làm jumpscare tùy chỉnh
    }
})

---====== Debug thực thể (Callbacks) ======---

entity:SetCallback("OnSpawned", function()
    print("OnSpawned: Thực thể đã được sinh ra.")
    -- Lấy model Singularity tương tự như cách tìm A-60 trước đây
    local MAX_FIND_TIME = 5
    local foundModel = nil
    local startTime = tick()
    while not foundModel and (tick() - startTime < MAX_FIND_TIME) do
        foundModel = entity.Character 
        if not foundModel then
            foundModel = Workspace:FindFirstChild(entity.Entity.Name)
        end
        if not foundModel then
            wait(0.1)
        end
    end
    singularityModel = foundModel

    if singularityModel then
        print("OnSpawned: Đã lấy được Model Singularity:", singularityModel.Name)
        -- Kiểm tra PrimaryPart nếu bạn muốn teleport Singularity (nhưng yêu cầu này là jumpscare GUI)
        if not singularityModel.PrimaryPart then
            warn("OnSpawned: Model Singularity không có PrimaryPart được đặt. Sẽ không ảnh hưởng đến jumpscare GUI.")
        end
    else
        warn("OnSpawned: KHÔNG THỂ LẤY ĐƯỢC Model Singularity sau khi sinh.")
    end

    -- Hiệu ứng ánh sáng
    game.Lighting.MainColorCorrection.TintColor = Color3.fromRGB(0, 0, 0)
    game.Lighting.MainColorCorrection.Contrast = 1
    local tween = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(2.5), {Contrast = 0})
    tween:Play()
    local TW = TweenService:Create(game.Lighting.MainColorCorrection, TweenInfo.new(80),{TintColor = Color3.fromRGB(255, 255, 255)})
    TW:Play()
end)

entity:SetCallback("OnStartMoving", function()
    print("OnStartMoving: Thực thể đã bắt đầu di chuyển")
end)

entity:SetCallback("OnEnterRoom", function(room, firstTime)
    if firstTime == true then
        print("OnEnterRoom: Thực thể đã vào phòng: ".. room.Name.. " lần đầu tiên")
    else
        print("OnEnterRoom: Thực thể đã vào phòng: ".. room.Name.. " lần nữa")
    end
end)

entity:SetCallback("OnLookAt", function(lineOfSight)
	if lineOfSight == true then
		print("OnLookAt: Người chơi đang nhìn vào thực thể")
	else
		print("OnLookAt: Góc nhìn của người chơi bị vật cản")
	end
end)

entity:SetCallback("OnRebounding", function(startOfRebound)
    if startOfRebound == true then
        print("OnRebounding: Thực thể đã bắt đầu rebounding")
	else
        print("OnRebounding: Thực thể đã kết thúc rebounding")
	end
end)

entity:SetCallback("OnDespawning", function()
    print("OnDespawning: Thực thể đang biến mất")
end)

entity:SetCallback("OnDespawned", function()
    print("OnDespawned: Thực thể đã biến mất")
    singularityModel = nil
end)

entity:SetCallback("OnDamagePlayer", function(newHealth)
	if newHealth <= 0 then -- Kiểm tra máu <= 0 để đảm bảo người chơi đã chết
		print("OnDamagePlayer: Entity đã giết người chơi. Kích hoạt jumpscare...")

        -- Chơi âm thanh kill
        local cue2 = Instance.new("Sound")
        cue2.Parent = Workspace -- Để âm thanh phát ra từ thế giới
        cue2.Name = "Spawn"
        cue2.SoundId = "rbxassetid://7861818231"
        cue2.Volume = 99999 -- Volume rất lớn
        cue2.PlaybackSpeed = 0.9
        cue2:Play()
        Debris:AddItem(cue2, 5) -- Tự động xóa âm thanh sau 5 giây

        local player = Players.LocalPlayer
        if not player or not JUMPSCARE_IMAGE_ID or JUMPSCARE_IMAGE_ID == "rbxassetid://JUMPSCARE_IMAGE_ID_HERE" then
            warn("Không thể kích hoạt jumpscare: Thiếu LocalPlayer hoặc JUMPSCARE_IMAGE_ID chưa được thay thế.")
            return
        end

        local playerGui = player:FindFirstChildOfClass("PlayerGui")
        if not playerGui then
            warn("Không thể kích hoạt jumpscare: PlayerGui không tồn tại.")
            return
        end

        -- Tạo ScreenGui cho jumpscare
        local jumpscareGui = Instance.new("ScreenGui")
        jumpscareGui.Name = "SingularityJumpscare"
        jumpscareGui.Parent = playerGui
        jumpscareGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        -- Tạo Frame chứa các hình ảnh xung quanh (để nhóm và sắp xếp)
        local tiledImagesFrame = Instance.new("Frame")
        tiledImagesFrame.Name = "TiledImages"
        tiledImagesFrame.Size = UDim2.new(1, 0, 1, 0) -- Toàn màn hình
        tiledImagesFrame.BackgroundTransparency = 1
        tiledImagesFrame.Parent = jumpscareGui

        -- Sử dụng UIGridLayout để sắp xếp các hình ảnh nhỏ
        local gridLayout = Instance.new("UIGridLayout")
        gridLayout.CellSize = UDim2.new(0.2, 0, 0.2, 0) -- Kích thước ô (ví dụ: 20% chiều rộng/cao màn hình)
        gridLayout.FillDirection = Enum.FillDirection.Horizontal
        gridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        gridLayout.VerticalAlignment = Enum.VerticalAlignment.Center
        gridLayout.Parent = tiledImagesFrame
        
        -- Tạo nhiều hình ảnh nhỏ xung quanh
        local numRows = 5 -- Số hàng
        local numCols = 5 -- Số cột
        for i = 1, numRows * numCols do
            local tiledImage = Instance.new("ImageLabel")
            tiledImage.Image = 101016395683805
            tiledImage.BackgroundTransparency = 1
            tiledImage.ImageTransparency = 1 -- Bắt đầu mờ
            tiledImage.ZIndex = 2 -- Đặt ZIndex thấp hơn hình ảnh trung tâm
            tiledImage.Parent = tiledImagesFrame

            -- Animation cho từng hình ảnh nhỏ
            TweenService:Create(tiledImage, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, math.random(0, 0.1)), {ImageTransparency = 0}):Play()
        end

        -- Tạo hình ảnh jumpscare trung tâm
        local centerImage = Instance.new("ImageLabel")
        centerImage.Name = "CentralJumpscareImage"
        centerImage.Image = JUMPSCARE_IMAGE_ID
        centerImage.BackgroundTransparency = 1
        centerImage.ImageTransparency = 1 -- Bắt đầu mờ
        centerImage.Size = UDim2.new(0.8, 0, 0.8, 0) -- Kích thước lớn
        centerImage.Position = UDim2.new(0.5, 0, 0.5, 0)
        centerImage.AnchorPoint = Vector2.new(0.5, 0.5) -- Đặt giữa màn hình
        centerImage.ZIndex = 3 -- Đặt ZIndex cao nhất để nằm trên cùng
        centerImage.Parent = jumpscareGui

        -- Animation cho hình ảnh trung tâm
        local fadeInTween = TweenService:Create(centerImage, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageTransparency = 0})
        fadeInTween:Play()

        -- Âm thanh jumpscare (nếu bạn có một âm thanh riêng cho jumpscare ngoài âm thanh cue2)
        -- local jumpscareSound = Instance.new("Sound")
        -- jumpscareSound.Parent = centerImage -- Phát từ vị trí hình ảnh
        -- jumpscareSound.SoundId = "rbxassetid://YOUR_JUMPSCARE_SOUND_ID_HERE"
        -- jumpscareSound.Volume = 1
        -- jumpscareSound:Play()
        -- Debris:AddItem(jumpscareSound, 1.5)

        -- Thời gian hiển thị jumpscare
        local jumpscareDuration = 1.2 -- Thời gian jumpscare hiển thị (giây)
        wait(jumpscareDuration)

        -- Mờ dần và xóa jumpscare GUI
        local fadeOutTween = TweenService:Create(jumpscareGui, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Transparency = 1})
        fadeOutTween:Play()

        Debris:AddItem(jumpscareGui, 0.4) -- Xóa GUI sau khi mờ dần

	else
		print("OnDamagePlayer: Entity đã gây sát thương cho người chơi (chưa chết)")
	end
end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

---====== Chạy thực thể ======---

entity:Run()
